


Gadgets
=======


0x000000000040119e: adc dword ptr [rax], edi; test rax, rax; je 0x11b0; mov edi, 0x404060; jmp rax; 
0x0000000000401130: adc eax, 0x2ebb; hlt; nop word ptr cs:[rax + rax]; endbr64; ret; 
0x000000000040112c: adc eax, dword ptr [rax]; call qword ptr [rip + 0x2ebb]; hlt; nop word ptr cs:[rax + rax]; endbr64; ret; 
0x000000000040115c: adc edi, dword ptr [rax]; test rax, rax; je 0x1170; mov edi, 0x404060; jmp rax; 
0x00000000004011cc: adc edx, dword ptr [rbp + 0x48]; mov ebp, esp; call 0x1150; mov byte ptr [rip + 0x2eab], 1; pop rbp; ret; 
0x0000000000401134: add ah, dh; nop word ptr cs:[rax + rax]; endbr64; ret; 
0x000000000040112e: add bh, bh; adc eax, 0x2ebb; hlt; nop word ptr cs:[rax + rax]; endbr64; ret; 
0x000000000040100e: add byte ptr [rax - 0x7b], cl; sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x000000000040115e: add byte ptr [rax], al; add byte ptr [rax], al; test rax, rax; je 0x1170; mov edi, 0x404060; jmp rax; 
0x00000000004011a0: add byte ptr [rax], al; add byte ptr [rax], al; test rax, rax; je 0x11b0; mov edi, 0x404060; jmp rax; 
0x000000000040113c: add byte ptr [rax], al; add byte ptr [rax], al; endbr64; ret; 
0x0000000000401297: add byte ptr [rax], al; add byte ptr [rbp + rax - 0x18], dh; paddd mm7, mm7; dec ecx; ret; 
0x0000000000401298: add byte ptr [rax], al; je 0x12a1; call 0x10b0; leave; ret; 
0x000000000040130a: add byte ptr [rax], al; je 0x1313; call 0x10b0; leave; ret; 
0x00000000004014b4: add byte ptr [rax], al; je 0x14bd; call 0x10b0; leave; ret; 
0x000000000040136d: add byte ptr [rax], al; mov rdi, rax; call 0x10d0; nop; pop rbp; ret; 
0x000000000040100d: add byte ptr [rax], al; test rax, rax; je 0x1016; call rax; 
0x000000000040100d: add byte ptr [rax], al; test rax, rax; je 0x1016; call rax; add rsp, 8; ret; 
0x0000000000401160: add byte ptr [rax], al; test rax, rax; je 0x1170; mov edi, 0x404060; jmp rax; 
0x00000000004011a2: add byte ptr [rax], al; test rax, rax; je 0x11b0; mov edi, 0x404060; jmp rax; 
0x000000000040113e: add byte ptr [rax], al; endbr64; ret; 
0x0000000000401133: add byte ptr [rax], al; hlt; nop word ptr cs:[rax + rax]; endbr64; ret; 
0x0000000000401299: add byte ptr [rbp + rax - 0x18], dh; paddd mm7, mm7; dec ecx; ret; 
0x00000000004011db: add byte ptr [rcx], al; pop rbp; ret; 
0x0000000000401132: add byte ptr cs:[rax], al; hlt; nop word ptr cs:[rax + rax]; endbr64; ret; 
0x00000000004013b8: add cl, byte ptr [rax - 0x7d]; ret 0xc704; 
0x000000000040112d: add dil, dil; adc eax, 0x2ebb; hlt; nop word ptr cs:[rax + rax]; endbr64; ret; 
0x000000000040100a: add eax, 0x2fe9; test rax, rax; je 0x1016; call rax; 
0x000000000040100a: add eax, 0x2fe9; test rax, rax; je 0x1016; call rax; add rsp, 8; ret; 
0x00000000004014b7: add eax, 0xfffbf3e8; dec ecx; ret; 
0x000000000040130d: add eax, 0xfffd9de8; dec ecx; ret; 
0x000000000040129b: add eax, 0xfffe0fe8; dec ecx; ret; 
0x0000000000401017: add esp, 8; ret; 
0x0000000000401016: add rsp, 8; ret; 
0x0000000000401295: and eax, 0x28; je 0x12a1; call 0x10b0; leave; ret; 
0x0000000000401307: and eax, 0x28; je 0x1313; call 0x10b0; leave; ret; 
0x00000000004014b1: and eax, 0x28; je 0x14bd; call 0x10b0; leave; ret; 
0x000000000040129c: call 0x10b0; leave; ret; 
0x0000000000401372: call 0x10d0; nop; pop rbp; ret; 
0x00000000004011d1: call 0x1150; mov byte ptr [rip + 0x2eab], 1; pop rbp; ret; 
0x000000000040125f: call 0xffffffff89e8e384; ret 0xd201; 
0x000000000040112f: call qword ptr [rip + 0x2ebb]; hlt; nop word ptr cs:[rax + rax]; endbr64; ret; 
0x0000000000401014: call rax; 
0x0000000000401014: call rax; add rsp, 8; ret; 
0x00000000004012a0: dec ecx; ret; 
0x0000000000401006: in al, dx; or byte ptr [rax - 0x75], cl; add eax, 0x2fe9; test rax, rax; je 0x1016; call rax; 
0x0000000000401012: je 0x1016; call rax; 
0x0000000000401012: je 0x1016; call rax; add rsp, 8; ret; 
0x000000000040115b: je 0x1170; mov eax, 0; test rax, rax; je 0x1170; mov edi, 0x404060; jmp rax; 
0x0000000000401165: je 0x1170; mov edi, 0x404060; jmp rax; 
0x000000000040119d: je 0x11b0; mov eax, 0; test rax, rax; je 0x11b0; mov edi, 0x404060; jmp rax; 
0x00000000004011a7: je 0x11b0; mov edi, 0x404060; jmp rax; 
0x000000000040129a: je 0x12a1; call 0x10b0; leave; ret; 
0x000000000040130c: je 0x1313; call 0x10b0; leave; ret; 
0x00000000004014b6: je 0x14bd; call 0x10b0; leave; ret; 
0x000000000040116c: jmp rax; 
0x00000000004011d6: mov byte ptr [rip + 0x2eab], 1; pop rbp; ret; 
0x000000000040115d: mov eax, 0; test rax, rax; je 0x1170; mov edi, 0x404060; jmp rax; 
0x000000000040119f: mov eax, 0; test rax, rax; je 0x11b0; mov edi, 0x404060; jmp rax; 
0x0000000000401009: mov eax, dword ptr [rip + 0x2fe9]; test rax, rax; je 0x1016; call rax; 
0x0000000000401009: mov eax, dword ptr [rip + 0x2fe9]; test rax, rax; je 0x1016; call rax; add rsp, 8; ret; 
0x00000000004011cf: mov ebp, esp; call 0x1150; mov byte ptr [rip + 0x2eab], 1; pop rbp; ret; 
0x0000000000401131: mov ebx, 0xf400002e; nop word ptr cs:[rax + rax]; endbr64; ret; 
0x0000000000401167: mov edi, 0x404060; jmp rax; 
0x0000000000401370: mov edi, eax; call 0x10d0; nop; pop rbp; ret; 
0x0000000000401008: mov rax, qword ptr [rip + 0x2fe9]; test rax, rax; je 0x1016; call rax; 
0x0000000000401008: mov rax, qword ptr [rip + 0x2fe9]; test rax, rax; je 0x1016; call rax; add rsp, 8; ret; 
0x00000000004011ce: mov rbp, rsp; call 0x1150; mov byte ptr [rip + 0x2eab], 1; pop rbp; ret; 
0x000000000040136f: mov rdi, rax; call 0x10d0; nop; pop rbp; ret; 
0x0000000000401138: nop dword ptr [rax + rax]; endbr64; ret; 
0x0000000000401137: nop dword ptr cs:[rax + rax]; endbr64; ret; 
0x0000000000401136: nop word ptr cs:[rax + rax]; endbr64; ret; 
0x0000000000401007: or byte ptr [rax - 0x75], cl; add eax, 0x2fe9; test rax, rax; je 0x1016; call rax; 
0x0000000000401166: or dword ptr [rdi + 0x404060], edi; jmp rax; 
0x000000000040129d: paddd mm7, mm7; dec ecx; ret; 
0x00000000004011dd: pop rbp; ret; 
0x00000000004011cd: push rbp; mov rbp, rsp; call 0x1150; mov byte ptr [rip + 0x2eab], 1; pop rbp; ret; 
0x000000000040125c: ret 0xc148; 
0x00000000004013bb: ret 0xc704; 
0x0000000000401268: ret 0xc889; 
0x0000000000401264: ret 0xd201; 
0x0000000000401266: rol byte ptr [rcx], cl; ret 0xc889; 
0x0000000000401011: sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x000000000040125b: scasd eax, dword ptr [rdi]; ret 0xc148; 
0x0000000000401296: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x12a1; call 0x10b0; leave; ret; 
0x0000000000401308: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x1313; call 0x10b0; leave; ret; 
0x00000000004014b2: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x14bd; call 0x10b0; leave; ret; 
0x00000000004014c5: sub esp, 8; add rsp, 8; ret; 
0x0000000000401005: sub esp, 8; mov rax, qword ptr [rip + 0x2fe9]; test rax, rax; je 0x1016; call rax; 
0x00000000004014c4: sub rsp, 8; add rsp, 8; ret; 
0x0000000000401004: sub rsp, 8; mov rax, qword ptr [rip + 0x2fe9]; test rax, rax; je 0x1016; call rax; 
0x000000000040113a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; endbr64; ret; 
0x0000000000401010: test eax, eax; je 0x1016; call rax; 
0x0000000000401010: test eax, eax; je 0x1016; call rax; add rsp, 8; ret; 
0x0000000000401163: test eax, eax; je 0x1170; mov edi, 0x404060; jmp rax; 
0x00000000004011a5: test eax, eax; je 0x11b0; mov edi, 0x404060; jmp rax; 
0x000000000040100f: test rax, rax; je 0x1016; call rax; 
0x000000000040100f: test rax, rax; je 0x1016; call rax; add rsp, 8; ret; 
0x0000000000401162: test rax, rax; je 0x1170; mov edi, 0x404060; jmp rax; 
0x00000000004011a4: test rax, rax; je 0x11b0; mov edi, 0x404060; jmp rax; 
0x00000000004014c3: cli; sub rsp, 8; add rsp, 8; ret; 
0x0000000000401003: cli; sub rsp, 8; mov rax, qword ptr [rip + 0x2fe9]; test rax, rax; je 0x1016; call rax; 
0x0000000000401143: cli; ret; 
0x00000000004014c0: endbr64; sub rsp, 8; add rsp, 8; ret; 
0x0000000000401000: endbr64; sub rsp, 8; mov rax, qword ptr [rip + 0x2fe9]; test rax, rax; je 0x1016; call rax; 
0x0000000000401140: endbr64; ret; 
0x0000000000401135: hlt; nop word ptr cs:[rax + rax]; endbr64; ret; 
0x00000000004012a1: leave; ret; 
0x0000000000401377: nop; pop rbp; ret; 
0x000000000040116f: nop; ret; 
0x000000000040101a: ret; 

111 gadgets found
