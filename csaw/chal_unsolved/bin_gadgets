


Gadgets
=======


0x000000000808a352: adc byte ptr [rax], bh; leave; ret; 
0x000000000808a08e: adc dword ptr [rax], edi; test rax, rax; je 0x7c8a0a0; mov edi, 0x808d0a8; jmp rax; 
0x000000000808a029: adc eax, 0x2fc2; hlt; nop; endbr64; ret; 
0x000000000808a04c: adc edi, dword ptr [rax]; test rax, rax; je 0x7c8a060; mov edi, 0x808d0a8; jmp rax; 
0x000000000808a0bc: adc edx, dword ptr [rbp + 0x48]; mov ebp, esp; call 0x7c8a040; mov byte ptr [rip + 0x300b], 1; pop rbp; ret; 
0x000000000808a02d: add ah, dh; nop; endbr64; ret; 
0x000000000808a278: add al, ch; and ch, byte ptr [rsi + 0x37]; clc; nop; leave; ret; 
0x000000000808a3cc: add byte ptr [rax], al; add byte ptr [rax], al; endbr64; ret; 
0x000000000808a354: add byte ptr [rax], al; add byte ptr [rax], al; leave; ret; 
0x000000000808a04e: add byte ptr [rax], al; add byte ptr [rax], al; test rax, rax; je 0x7c8a060; mov edi, 0x808d0a8; jmp rax; 
0x000000000808a090: add byte ptr [rax], al; add byte ptr [rax], al; test rax, rax; je 0x7c8a0a0; mov edi, 0x808d0a8; jmp rax; 
0x000000000808a355: add byte ptr [rax], al; add cl, cl; ret; 
0x000000000808a277: add byte ptr [rax], al; call 0x10a0; nop; leave; ret; 
0x000000000808a348: add byte ptr [rax], al; call 0x10b0; add rsp, 0x10; mov eax, 0; leave; ret; 
0x000000000808a3ce: add byte ptr [rax], al; endbr64; ret; 
0x000000000808a3d6: add byte ptr [rax], al; endbr64; sub rsp, 8; add rsp, 8; ret; 
0x000000000808a02c: add byte ptr [rax], al; hlt; nop; endbr64; ret; 
0x000000000808a356: add byte ptr [rax], al; leave; ret; 
0x000000000808a050: add byte ptr [rax], al; test rax, rax; je 0x7c8a060; mov edi, 0x808d0a8; jmp rax; 
0x000000000808a092: add byte ptr [rax], al; test rax, rax; je 0x7c8a0a0; mov edi, 0x808d0a8; jmp rax; 
0x000000000808a0cb: add byte ptr [rcx], al; pop rbp; ret; 
0x000000000808a271: add cl, byte ptr [rax - 0x73]; cmp eax, 0xe17; call 0x10a0; nop; leave; ret; 
0x000000000808a357: add cl, cl; ret; 
0x000000000040100a: add eax, 0x7c8bfe9; test rax, rax; je 0x1016; call rax; 
0x000000000040100a: add eax, 0x7c8bfe9; test rax, rax; je 0x1016; call rax; add rsp, 8; ret; 
0x000000000808a12c: add eax, edx; sub ecx, eax; mov edx, ecx; mov eax, edx; pop rbp; ret; 
0x000000000808a350: add esp, 0x10; mov eax, 0; leave; ret; 
0x0000000000401017: add esp, 8; ret; 
0x000000000808a34f: add rsp, 0x10; mov eax, 0; leave; ret; 
0x0000000000401016: add rsp, 8; ret; 
0x000000000808a27a: and ch, byte ptr [rsi + 0x37]; clc; nop; leave; ret; 
0x000000000808a024: and dword ptr [rdx + 0x15ff0808], 0x2fc2; hlt; nop; endbr64; ret; 
0x000000000808a279: call 0x10a0; nop; leave; ret; 
0x000000000808a34a: call 0x10b0; add rsp, 0x10; mov eax, 0; leave; ret; 
0x000000000808a0c1: call 0x7c8a040; mov byte ptr [rip + 0x300b], 1; pop rbp; ret; 
0x000000000808a028: call qword ptr [rip + 0x2fc2]; hlt; nop; endbr64; ret; 
0x0000000000401014: call rax; 
0x0000000000401014: call rax; add rsp, 8; ret; 
0x000000000808a34e: clc; add rsp, 0x10; mov eax, 0; leave; ret; 
0x000000000808a27d: clc; nop; leave; ret; 
0x000000000808a033: cli; ret; 
0x000000000808a3db: cli; sub rsp, 8; add rsp, 8; ret; 
0x0000000000401003: cli; sub rsp, 8; mov rax, qword ptr [rip + 0x7c8bfe9]; test rax, rax; je 0x1016; call rax; 
0x000000000808a274: cmp eax, 0xe17; call 0x10a0; nop; leave; ret; 
0x000000000808a030: endbr64; ret; 
0x000000000808a3d8: endbr64; sub rsp, 8; add rsp, 8; ret; 
0x0000000000401000: endbr64; sub rsp, 8; mov rax, qword ptr [rip + 0x7c8bfe9]; test rax, rax; je 0x1016; call rax; 
0x000000000808a3ac: fisttp word ptr [rax - 0x7d]; ret; 
0x000000000808a02e: hlt; nop; endbr64; ret; 
0x0000000000401006: in al, dx; or byte ptr [rax - 0x75], cl; add eax, 0x7c8bfe9; test rax, rax; je 0x1016; call rax; 
0x0000000000401012: je 0x1016; call rax; 
0x0000000000401012: je 0x1016; call rax; add rsp, 8; ret; 
0x000000000808a04b: je 0x7c8a060; mov eax, 0; test rax, rax; je 0x7c8a060; mov edi, 0x808d0a8; jmp rax; 
0x000000000808a055: je 0x7c8a060; mov edi, 0x808d0a8; jmp rax; 
0x000000000808a08d: je 0x7c8a0a0; mov eax, 0; test rax, rax; je 0x7c8a0a0; mov edi, 0x808d0a8; jmp rax; 
0x000000000808a097: je 0x7c8a0a0; mov edi, 0x808d0a8; jmp rax; 
0x000000000808a05c: jmp rax; 
0x000000000808a273: lea edi, [rip + 0xe17]; call 0x10a0; nop; leave; ret; 
0x000000000808a272: lea rdi, [rip + 0xe17]; call 0x10a0; nop; leave; ret; 
0x000000000808a27f: leave; ret; 
0x000000000808a0c6: mov byte ptr [rip + 0x300b], 1; pop rbp; ret; 
0x000000000808a023: mov dword ptr [rcx - 0xf7f75e], 0x2fc215; add ah, dh; nop; endbr64; ret; 
0x000000000808a26f: mov dword ptr [rdx + rax], ecx; lea rdi, [rip + 0xe17]; call 0x10a0; nop; leave; ret; 
0x000000000808a353: mov eax, 0; leave; ret; 
0x000000000808a04d: mov eax, 0; test rax, rax; je 0x7c8a060; mov edi, 0x808d0a8; jmp rax; 
0x000000000808a08f: mov eax, 0; test rax, rax; je 0x7c8a0a0; mov edi, 0x808d0a8; jmp rax; 
0x0000000000401009: mov eax, dword ptr [rip + 0x7c8bfe9]; test rax, rax; je 0x1016; call rax; 
0x0000000000401009: mov eax, dword ptr [rip + 0x7c8bfe9]; test rax, rax; je 0x1016; call rax; add rsp, 8; ret; 
0x000000000808a132: mov eax, edx; pop rbp; ret; 
0x000000000808a0bf: mov ebp, esp; call 0x7c8a040; mov byte ptr [rip + 0x300b], 1; pop rbp; ret; 
0x000000000808a022: mov edi, 0x808a281; call qword ptr [rip + 0x2fc2]; hlt; nop; endbr64; ret; 
0x000000000808a057: mov edi, 0x808d0a8; jmp rax; 
0x000000000040100c: mov edi, 0x854807c8; sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x000000000808a130: mov edx, ecx; mov eax, edx; pop rbp; ret; 
0x000000000808a26e: mov qword ptr [rdx + rax], rcx; lea rdi, [rip + 0xe17]; call 0x10a0; nop; leave; ret; 
0x0000000000401008: mov rax, qword ptr [rip + 0x7c8bfe9]; test rax, rax; je 0x1016; call rax; 
0x0000000000401008: mov rax, qword ptr [rip + 0x7c8bfe9]; test rax, rax; je 0x1016; call rax; add rsp, 8; ret; 
0x000000000808a0be: mov rbp, rsp; call 0x7c8a040; mov byte ptr [rip + 0x300b], 1; pop rbp; ret; 
0x000000000808a021: mov rdi, 0x808a281; call qword ptr [rip + 0x2fc2]; hlt; nop; endbr64; ret; 
0x000000000808a025: movabs byte ptr [0x2fc215ff0808], al; hlt; nop; endbr64; ret; 
0x000000000808a3c8: nop dword ptr [rax + rax]; endbr64; ret; 
0x000000000808a3c7: nop dword ptr cs:[rax + rax]; endbr64; ret; 
0x000000000808a3c6: nop word ptr cs:[rax + rax]; endbr64; ret; 
0x000000000808a02f: nop; endbr64; ret; 
0x000000000808a27e: nop; leave; ret; 
0x000000000808a05f: nop; ret; 
0x000000000808a270: or al, 2; lea rdi, [rip + 0xe17]; call 0x10a0; nop; leave; ret; 
0x000000000808a027: or bh, bh; adc eax, 0x2fc2; hlt; nop; endbr64; ret; 
0x000000000808a020: or byte ptr [rax - 0x39], cl; mov dword ptr [rcx - 0xf7f75e], 0x2fc215; add ah, dh; nop; endbr64; ret; 
0x0000000000401007: or byte ptr [rax - 0x75], cl; add eax, 0x7c8bfe9; test rax, rax; je 0x1016; call rax; 
0x000000000808a026: or byte ptr [rax], cl; call qword ptr [rip + 0x2fc2]; hlt; nop; endbr64; ret; 
0x000000000808a05a: or byte ptr [rax], cl; jmp rax; 
0x000000000808a056: or dword ptr [rdi + 0x808d0a8], edi; jmp rax; 
0x000000000808a3bc: pop r12; pop r13; pop r14; pop r15; ret; 
0x000000000808a3be: pop r13; pop r14; pop r15; ret; 
0x000000000808a3c0: pop r14; pop r15; ret; 
0x000000000808a3c2: pop r15; ret; 
0x000000000808a3bb: pop rbp; pop r12; pop r13; pop r14; pop r15; ret; 
0x000000000808a3bf: pop rbp; pop r14; pop r15; ret; 
0x000000000808a0cd: pop rbp; ret; 
0x000000000808a3c3: pop rdi; ret; 
0x000000000808a3c1: pop rsi; pop r15; ret; 
0x000000000808a3bd: pop rsp; pop r13; pop r14; pop r15; ret; 
0x000000000808a0bd: push rbp; mov rbp, rsp; call 0x7c8a040; mov byte ptr [rip + 0x300b], 1; pop rbp; ret; 
0x000000000808a02a: ret 0x2f; 
0x000000000808a25e: ret 0x8d48; 
0x000000000808a11a: ret 0xc889; 
0x000000000808a121: ret 0xd089; 
0x000000000040101a: ret; 
0x000000000808a131: retf 0xd089; pop rbp; ret; 
0x0000000000401011: sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x000000000808a12e: sub ecx, eax; mov edx, ecx; mov eax, edx; pop rbp; ret; 
0x000000000808a3dd: sub esp, 8; add rsp, 8; ret; 
0x0000000000401005: sub esp, 8; mov rax, qword ptr [rip + 0x7c8bfe9]; test rax, rax; je 0x1016; call rax; 
0x000000000808a3dc: sub rsp, 8; add rsp, 8; ret; 
0x0000000000401004: sub rsp, 8; mov rax, qword ptr [rip + 0x7c8bfe9]; test rax, rax; je 0x1016; call rax; 
0x000000000808a058: test al, 0xd0; or byte ptr [rax], cl; jmp rax; 
0x000000000808a3ca: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; endbr64; ret; 
0x0000000000401010: test eax, eax; je 0x1016; call rax; 
0x0000000000401010: test eax, eax; je 0x1016; call rax; add rsp, 8; ret; 
0x000000000808a053: test eax, eax; je 0x7c8a060; mov edi, 0x808d0a8; jmp rax; 
0x000000000808a095: test eax, eax; je 0x7c8a0a0; mov edi, 0x808d0a8; jmp rax; 
0x000000000040100f: test rax, rax; je 0x1016; call rax; 
0x000000000040100f: test rax, rax; je 0x1016; call rax; add rsp, 8; ret; 
0x000000000808a052: test rax, rax; je 0x7c8a060; mov edi, 0x808d0a8; jmp rax; 
0x000000000808a094: test rax, rax; je 0x7c8a0a0; mov edi, 0x808d0a8; jmp rax; 
0x000000000808a0c9: xor byte ptr [rax], al; add byte ptr [rcx], al; pop rbp; ret; 

127 gadgets found
