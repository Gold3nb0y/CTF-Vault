


Gadgets
=======


0x0000000000403848: adc al, byte ptr [rdi]; add byte ptr [rax], al; mov rax, qword ptr [rbp - 0x18]; leave; ret; 
0x0000000000404abf: adc byte ptr [rax + 0x20c48348], dl; pop rbx; pop r12; pop rbp; ret; 
0x00000000004052dd: adc byte ptr [rax - 0x75], cl; call 0xffffffffc2395371; sete al; pop rbp; ret; 
0x0000000000405863: adc byte ptr [rax - 0x75], cl; clc; mov qword ptr [rax + 8], 0; nop; leave; ret; 
0x0000000000405589: adc cl, byte ptr [rax - 0x73]; or byte ptr [rax - 0x77], cl; ret 0x8948; 
0x0000000000402ed2: adc dword ptr [rax], eax; mov rax, qword ptr [rbp - 8]; mov qword ptr [rax + 8], 0; nop; pop rbp; ret; 
0x000000000040257e: adc dword ptr [rax], edi; test rax, rax; je 0x2590; mov edi, 0x40a160; jmp rax; 
0x0000000000402510: adc eax, 0x7ad3; hlt; nop word ptr cs:[rax + rax]; endbr64; ret; 
0x000000000040253c: adc edi, dword ptr [rax]; test rax, rax; je 0x2550; mov edi, 0x40a160; jmp rax; 
0x00000000004025ac: adc edx, dword ptr [rbp + 0x48]; mov ebp, esp; call 0x2530; mov byte ptr [rip + 0x7f53], 1; pop rbp; ret; 
0x0000000000402514: add ah, dh; nop word ptr cs:[rax + rax]; endbr64; ret; 
0x0000000000405121: add al, 0; add byte ptr [rax - 0x75], cl; clc; leave; ret; 
0x00000000004039d0: add al, 0; add byte ptr [rax - 0x77], cl; ret 0x8b48; 
0x0000000000404dfc: add al, 0; add byte ptr [rax - 0x77], cl; ret 0x8d48; 
0x0000000000404ded: add al, 0; add byte ptr [rax - 0x77], cl; ret; 
0x00000000004031cd: add al, 0; add cl, cl; ret; 
0x0000000000404562: add al, byte ptr [rax]; add byte ptr [rax - 0x77], cl; ret; 
0x000000000040598b: add al, byte ptr [rax]; add byte ptr [rax], al; leave; ret; 
0x000000000040250e: add bh, bh; adc eax, 0x7ad3; hlt; nop word ptr cs:[rax + rax]; endbr64; ret; 
0x0000000000403f53: add bl, ch; add eax, 0xb8; add cl, cl; ret; 
0x0000000000404f4d: add byte ptr [rax + 0x30c48348], dl; pop rbx; pop r12; pop rbp; ret; 
0x0000000000403326: add byte ptr [rax + 0x39], cl; ret 0x940f; 
0x00000000004032d7: add byte ptr [rax + 0x39], cl; ret 0x950f; 
0x0000000000403b0b: add byte ptr [rax - 0x75], cl; call 0xfffffffff85dc65c; leave; ret; 
0x0000000000404209: add byte ptr [rax - 0x75], cl; call 0xfffffffff85dcd5a; leave; ret; 
0x00000000004033b2: add byte ptr [rax - 0x75], cl; clc; leave; ret; 
0x000000000040362f: add byte ptr [rax - 0x75], cl; clc; mov qword ptr [rax + 0x10], 0; nop; leave; ret; 
0x0000000000402ed3: add byte ptr [rax - 0x75], cl; clc; mov qword ptr [rax + 8], 0; nop; pop rbp; ret; 
0x0000000000404e32: add byte ptr [rax - 0x75], cl; pop rbp; clc; leave; ret; 
0x0000000000402d11: add byte ptr [rax - 0x77], cl; ret 0x80be; 
0x00000000004035ed: add byte ptr [rax - 0x77], cl; ret 0x8b48; 
0x0000000000402d8f: add byte ptr [rax - 0x77], cl; ret 0x8d48; 
0x00000000004034de: add byte ptr [rax - 0x77], cl; ret; 
0x0000000000404591: add byte ptr [rax - 0x7a274b8], dl; leave; ret; 
0x000000000040200e: add byte ptr [rax - 0x7b], cl; sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x00000000004055f2: add byte ptr [rax - 0x7d], cl; ror byte ptr [rax], 0x48; mov edi, eax; call 0x3f88; leave; ret; 
0x00000000004041a6: add byte ptr [rax - 0x7d], cl; ror byte ptr [rax], 0x48; mov edi, eax; call 0x4782; leave; ret; 
0x0000000000402eac: add byte ptr [rax - 9], cl; jne 0x2e99; mov rax, rdx; pop rbp; ret; 
0x0000000000404e30: add byte ptr [rax], al; add byte ptr [rax - 0x75], cl; pop rbp; clc; leave; ret; 
0x0000000000402eaa: add byte ptr [rax], al; add byte ptr [rax - 9], cl; jne 0x2e99; mov rax, rdx; pop rbp; ret; 
0x0000000000402ea9: add byte ptr [rax], al; add byte ptr [rax], al; div qword ptr [rbp - 0x18]; mov rax, rdx; pop rbp; ret; 
0x000000000040251c: add byte ptr [rax], al; add byte ptr [rax], al; endbr64; ret; 
0x0000000000403f57: add byte ptr [rax], al; add byte ptr [rax], al; leave; ret; 
0x0000000000404e2f: add byte ptr [rax], al; add byte ptr [rax], al; mov rbx, qword ptr [rbp - 8]; leave; ret; 
0x0000000000403047: add byte ptr [rax], al; add byte ptr [rax], al; nop; leave; ret; 
0x0000000000402e89: add byte ptr [rax], al; add byte ptr [rax], al; nop; pop rbp; ret; 
0x000000000040436a: add byte ptr [rax], al; add byte ptr [rax], al; pop rbp; ret; 
0x000000000040253e: add byte ptr [rax], al; add byte ptr [rax], al; test rax, rax; je 0x2550; mov edi, 0x40a160; jmp rax; 
0x0000000000402580: add byte ptr [rax], al; add byte ptr [rax], al; test rax, rax; je 0x2590; mov edi, 0x40a160; jmp rax; 
0x0000000000403f58: add byte ptr [rax], al; add cl, cl; ret; 
0x0000000000402df1: add byte ptr [rax], al; call 0x2d59; pop rbp; ret; 
0x0000000000404408: add byte ptr [rax], al; call 0x2dfa; nop; leave; ret; 
0x0000000000402eab: add byte ptr [rax], al; div qword ptr [rbp - 0x18]; mov rax, rdx; pop rbp; ret; 
0x000000000040251e: add byte ptr [rax], al; endbr64; ret; 
0x0000000000402513: add byte ptr [rax], al; hlt; nop word ptr cs:[rax + rax]; endbr64; ret; 
0x00000000004031ce: add byte ptr [rax], al; leave; ret; 
0x0000000000402dec: add byte ptr [rax], al; mov edi, 1; call 0x2d59; pop rbp; ret; 
0x000000000040384a: add byte ptr [rax], al; mov rax, qword ptr [rbp - 0x18]; leave; ret; 
0x0000000000403b0a: add byte ptr [rax], al; mov rax, qword ptr [rbp - 0x18]; mov rbx, qword ptr [rbp - 8]; leave; ret; 
0x00000000004033b1: add byte ptr [rax], al; mov rax, qword ptr [rbp - 8]; leave; ret; 
0x000000000040362e: add byte ptr [rax], al; mov rax, qword ptr [rbp - 8]; mov qword ptr [rax + 0x10], 0; nop; leave; ret; 
0x0000000000404e31: add byte ptr [rax], al; mov rbx, qword ptr [rbp - 8]; leave; ret; 
0x0000000000402dd4: add byte ptr [rax], al; mov rdi, rax; call 0x2370; nop; leave; ret; 
0x0000000000403869: add byte ptr [rax], al; mov rdi, rax; call 0x3f5e; mov rax, qword ptr [rbp - 8]; leave; ret; 
0x0000000000403b6b: add byte ptr [rax], al; mov rdi, rax; call 0x4370; mov rax, qword ptr [rbp - 8]; leave; ret; 
0x0000000000404249: add byte ptr [rax], al; mov rdi, rax; call 0x4aca; mov rax, qword ptr [rbp - 8]; leave; ret; 
0x00000000004052b8: add byte ptr [rax], al; mov rdi, rax; call 0x56a6; leave; ret; 
0x0000000000404ec7: add byte ptr [rax], al; mov rsi, rcx; mov rdi, rax; call 0x5376; leave; ret; 
0x0000000000405892: add byte ptr [rax], al; mov rsi, rcx; mov rdi, rax; call 0x590e; leave; ret; 
0x0000000000402f34: add byte ptr [rax], al; nop; leave; ret; 
0x0000000000404590: add byte ptr [rax], al; nop; mov rbx, qword ptr [rbp - 8]; leave; ret; 
0x0000000000402e8b: add byte ptr [rax], al; nop; pop rbp; ret; 
0x000000000040436c: add byte ptr [rax], al; pop rbp; ret; 
0x000000000040200d: add byte ptr [rax], al; test rax, rax; je 0x2016; call rax; 
0x000000000040200d: add byte ptr [rax], al; test rax, rax; je 0x2016; call rax; add rsp, 8; ret; 
0x0000000000402540: add byte ptr [rax], al; test rax, rax; je 0x2550; mov edi, 0x40a160; jmp rax; 
0x0000000000402582: add byte ptr [rax], al; test rax, rax; je 0x2590; mov edi, 0x40a160; jmp rax; 
0x00000000004030aa: add byte ptr [rax], bh; ret 0x940f; 
0x0000000000403e15: add byte ptr [rbp - 0x32], dh; nop; nop; leave; ret; 
0x0000000000403ece: add byte ptr [rcx - 0x2876b73a], cl; call 0x2e62; leave; ret; 
0x00000000004025bb: add byte ptr [rcx], al; pop rbp; ret; 
0x00000000004052e3: add byte ptr [rcx], bh; ret 0x940f; 
0x0000000000402ded: add byte ptr [rdi + 1], bh; call 0x2d59; pop rbp; ret; 
0x00000000004031cf: add cl, cl; ret; 
0x000000000040250d: add dil, dil; adc eax, 0x7ad3; hlt; nop word ptr cs:[rax + rax]; endbr64; ret; 
0x00000000004030f1: add dword ptr [rax + rax*8 - 0x74b7298b], eax; clc; leave; ret; 
0x0000000000404e65: add dword ptr [rax + rax], 0; leave; ret; 
0x0000000000402def: add dword ptr [rax], eax; add byte ptr [rax], al; call 0x2d59; pop rbp; ret; 
0x0000000000404406: add dword ptr [rax], eax; add byte ptr [rax], al; call 0x2dfa; nop; leave; ret; 
0x0000000000405258: add dword ptr [rax], eax; add byte ptr [rax], al; pop rbp; ret; 
0x000000000040564d: add dword ptr [rax], eax; add cl, cl; ret; 
0x0000000000402dd1: add eax, 0x2bee; mov rdi, rax; call 0x2370; nop; leave; ret; 
0x00000000004033af: add eax, 0x48000007; mov eax, dword ptr [rbp - 8]; leave; ret; 
0x000000000040200a: add eax, 0x7fe1; test rax, rax; je 0x2016; call rax; 
0x0000000000404c1a: add eax, 0x89480000; ret; 
0x0000000000404e2d: add eax, 0xb8; add byte ptr [rax - 0x75], cl; pop rbp; clc; leave; ret; 
0x0000000000403f55: add eax, 0xb8; add cl, cl; ret; 
0x0000000000404f84: add eax, 0xc9900000; ret; 
0x00000000004055f4: add eax, 8; mov rdi, rax; call 0x3f88; leave; ret; 
0x00000000004041a8: add eax, 8; mov rdi, rax; call 0x4782; leave; ret; 
0x0000000000405277: add eax, dword ptr [rax]; add cl, cl; ret; 
0x00000000004054de: add ecx, dword ptr [rax - 0x77]; ret 0x8b48; 
0x0000000000404ac2: add esp, 0x20; pop rbx; pop r12; pop rbp; ret; 
0x0000000000404f50: add esp, 0x30; pop rbx; pop r12; pop rbp; ret; 
0x0000000000404049: add esp, 0x38; pop rbx; pop r12; pop r13; pop rbp; ret; 
0x00000000004054ac: add esp, 0x58; pop rbx; pop r12; pop r13; pop rbp; ret; 
0x0000000000402017: add esp, 8; ret; 
0x00000000004055f3: add rax, 8; mov rdi, rax; call 0x3f88; leave; ret; 
0x00000000004041a7: add rax, 8; mov rdi, rax; call 0x4782; leave; ret; 
0x0000000000404ac1: add rsp, 0x20; pop rbx; pop r12; pop rbp; ret; 
0x0000000000404f4f: add rsp, 0x30; pop rbx; pop r12; pop rbp; ret; 
0x0000000000404048: add rsp, 0x38; pop rbx; pop r12; pop r13; pop rbp; ret; 
0x00000000004054ab: add rsp, 0x58; pop rbx; pop r12; pop r13; pop rbp; ret; 
0x0000000000402016: add rsp, 8; ret; 
0x0000000000405120: and byte ptr [rax + rax], al; add byte ptr [rax - 0x75], cl; clc; leave; ret; 
0x0000000000404ac4: and byte ptr [rbx + 0x41], bl; pop rsp; pop rbp; ret; 
0x0000000000403113: call 0x22b0; nop; leave; ret; 
0x0000000000402e59: call 0x22e0; nop; leave; ret; 
0x0000000000402dd9: call 0x2370; nop; leave; ret; 
0x00000000004053dc: call 0x23a0; nop; leave; ret; 
0x0000000000405240: call 0x23b0; leave; ret; 
0x000000000040283f: call 0x24b0; mov rbx, qword ptr [rbp - 8]; leave; ret; 
0x00000000004025b1: call 0x2530; mov byte ptr [rip + 0x7f53], 1; pop rbp; ret; 
0x0000000000402df3: call 0x2d59; pop rbp; ret; 
0x000000000040440a: call 0x2dfa; nop; leave; ret; 
0x0000000000403ed4: call 0x2e62; leave; ret; 
0x0000000000404817: call 0x2e76; nop; leave; ret; 
0x000000000040469c: call 0x2e90; leave; ret; 
0x000000000040303a: call 0x2eb6; mov rax, qword ptr [rbp - 8]; mov qword ptr [rax + 0x30], 0; nop; leave; ret; 
0x0000000000402fbd: call 0x2f66; nop; leave; ret; 
0x00000000004031ab: call 0x2fa6; nop; leave; ret; 
0x0000000000403065: call 0x2fc6; nop; leave; ret; 
0x0000000000402f31: call 0x311c; nop; leave; ret; 
0x0000000000402f5d: call 0x312c; nop; leave; ret; 
0x0000000000402f9d: call 0x313c; nop; leave; ret; 
0x0000000000402f7d: call 0x315c; nop; leave; ret; 
0x00000000004059db: call 0x317c; nop; leave; ret; 
0x0000000000404b57: call 0x32ba; test al, al; jne 0x4b38; mov rax, qword ptr [rbp - 8]; leave; ret; 
0x0000000000405181: call 0x32ba; test al, al; jne 0x5144; mov rax, qword ptr [rbp - 0x18]; leave; ret; 
0x0000000000403085: call 0x33ba; nop; leave; ret; 
0x0000000000403153: call 0x35a2; nop; leave; ret; 
0x0000000000403173: call 0x35c2; nop; leave; ret; 
0x0000000000403599: call 0x35d2; nop; leave; ret; 
0x00000000004031cb: call 0x3672; leave; ret; 
0x0000000000403294: call 0x37e0; leave; ret; 
0x00000000004032b3: call 0x3852; leave; ret; 
0x0000000000403302: call 0x387a; leave; ret; 
0x0000000000403352: call 0x39ac; leave; ret; 
0x000000000040337c: call 0x3a08; leave; ret; 
0x00000000004033ae: call 0x3ab8; mov rax, qword ptr [rbp - 8]; leave; ret; 
0x00000000004033df: call 0x3b16; nop; leave; ret; 
0x0000000000403412: call 0x3b36; mov rax, qword ptr [rbp - 8]; leave; ret; 
0x0000000000403440: call 0x3b7c; nop; leave; ret; 
0x0000000000403c42: call 0x3bf6; mov rax, qword ptr [rbp - 8]; leave; ret; 
0x00000000004035b9: call 0x3daa; nop; leave; ret; 
0x0000000000403669: call 0x3e1c; nop; leave; ret; 
0x00000000004036b6: call 0x3e8b; leave; ret; 
0x00000000004039e0: call 0x3edc; leave; ret; 
0x0000000000404184: call 0x3f5e; mov rax, qword ptr [rbp - 0x10]; leave; ret; 
0x0000000000403847: call 0x3f5e; mov rax, qword ptr [rbp - 0x18]; leave; ret; 
0x000000000040386e: call 0x3f5e; mov rax, qword ptr [rbp - 8]; leave; ret; 
0x00000000004055fa: call 0x3f88; leave; ret; 
0x0000000000403b07: call 0x4370; mov rax, qword ptr [rbp - 0x18]; mov rbx, qword ptr [rbp - 8]; leave; ret; 
0x0000000000403b70: call 0x4370; mov rax, qword ptr [rbp - 8]; leave; ret; 
0x0000000000403b2d: call 0x43b2; nop; leave; ret; 
0x0000000000403f80: call 0x43c4; nop; leave; ret; 
0x0000000000403bed: call 0x43e2; nop; leave; ret; 
0x0000000000404086: call 0x4540; nop; leave; ret; 
0x0000000000403f06: call 0x4672; leave; ret; 
0x0000000000403f9f: call 0x4782; leave; ret; 
0x0000000000403fc8: call 0x47a0; nop; leave; ret; 
0x00000000004033a7: call 0x48cebcf4; mov edi, eax; call 0x3ab8; mov rax, qword ptr [rbp - 8]; leave; ret; 
0x000000000040340b: call 0x48cebd58; mov edi, eax; call 0x3b36; mov rax, qword ptr [rbp - 8]; leave; ret; 
0x0000000000403840: call 0x48d6c18d; mov edi, eax; call 0x3f5e; mov rax, qword ptr [rbp - 0x18]; leave; ret; 
0x0000000000404205: call 0x4aca; mov rax, qword ptr [rbp - 0x18]; mov rbx, qword ptr [rbp - 8]; leave; ret; 
0x000000000040424e: call 0x4aca; mov rax, qword ptr [rbp - 8]; leave; ret; 
0x00000000004043aa: call 0x4b66; nop; leave; ret; 
0x000000000040458d: call 0x4cc0; nop; mov rbx, qword ptr [rbp - 8]; leave; ret; 
0x000000000040466b: call 0x4d9e; leave; ret; 
0x0000000000404799: call 0x4e6c; leave; ret; 
0x0000000000404d02: call 0x4f58; nop; leave; ret; 
0x0000000000404c8f: call 0x5190; leave; ret; 
0x0000000000404cb8: call 0x51a2; nop; leave; ret; 
0x0000000000404d21: call 0x51d3; leave; ret; 
0x0000000000404d43: call 0x51f2; nop; leave; ret; 
0x0000000000404d63: call 0x5202; nop; leave; ret; 
0x0000000000404d95: call 0x5212; nop; leave; ret; 
0x0000000000404e64: call 0x52ec; leave; ret; 
0x0000000000404e83: call 0x534c; leave; ret; 
0x0000000000404ecf: call 0x5376; leave; ret; 
0x0000000000404f82: call 0x54b6; nop; leave; ret; 
0x000000000040511f: call 0x5544; mov rax, qword ptr [rbp - 8]; leave; ret; 
0x00000000004051cc: call 0x5634; leave; ret; 
0x00000000004051ea: call 0x5652; leave; ret; 
0x0000000000405275: call 0x5664; leave; ret; 
0x0000000000405293: call 0x5676; leave; ret; 
0x00000000004052b5: call 0x5694; mov rdi, rax; call 0x56a6; leave; ret; 
0x00000000004052bd: call 0x56a6; leave; ret; 
0x0000000000405406: call 0x56c4; nop; leave; ret; 
0x000000000040553c: call 0x5714; nop; leave; ret; 
0x000000000040564b: call 0x57ed; leave; ret; 
0x000000000040568d: call 0x5800; leave; ret; 
0x00000000004056bd: call 0x581e; leave; ret; 
0x000000000040570c: call 0x5830; nop; leave; ret; 
0x0000000000405817: call 0x58b4; leave; ret; 
0x000000000040589a: call 0x590e; leave; ret; 
0x00000000004058dd: call 0x5973; leave; ret; 
0x000000000040598a: call 0x5991; leave; ret; 
0x00000000004059a8: call 0x59af; leave; ret; 
0x0000000000402eb0: call 0x5dd0b7fd; ret; 
0x0000000000405100: call 0xffffffff9010da4d; leave; ret; 
0x00000000004052e1: call 0xffffffffc2395371; sete al; pop rbp; ret; 
0x0000000000402ea3: call 0xfffffffff045b9f0; mov edx, 0; div qword ptr [rbp - 0x18]; mov rax, rdx; pop rbp; ret; 
0x0000000000403b0f: call 0xfffffffff85dc65c; leave; ret; 
0x000000000040420d: call 0xfffffffff85dcd5a; leave; ret; 
0x0000000000404778: call qword ptr [rax + 0xb8]; add cl, cl; ret; 
0x000000000040250f: call qword ptr [rip + 0x7ad3]; hlt; nop word ptr cs:[rax + rax]; endbr64; ret; 
0x0000000000402014: call rax; 
0x0000000000402014: call rax; add rsp, 8; ret; 
0x0000000000403e72: clc; cmp qword ptr [rbp - 8], 0; sete al; pop rbp; ret; 
0x0000000000402847: clc; leave; ret; 
0x0000000000402e6d: clc; mov dword ptr [rbp - 0xc], esi; mov eax, dword ptr [rbp - 0xc]; pop rbp; ret; 
0x0000000000403633: clc; mov qword ptr [rax + 0x10], 0; nop; leave; ret; 
0x0000000000403042: clc; mov qword ptr [rax + 0x30], 0; nop; leave; ret; 
0x0000000000405867: clc; mov qword ptr [rax + 8], 0; nop; leave; ret; 
0x0000000000402ed7: clc; mov qword ptr [rax + 8], 0; nop; pop rbp; ret; 
0x0000000000405629: clc; mov qword ptr [rax + 8], rdx; mov rax, qword ptr [rbp - 8]; pop rbp; ret; 
0x0000000000402e85: clc; mov qword ptr [rax], 0; nop; pop rbp; ret; 
0x0000000000405252: clc; mov qword ptr [rbp - 0x10], rsi; mov eax, 1; pop rbp; ret; 
0x00000000004049c9: clc; mov qword ptr [rbp - 0x10], rsi; mov qword ptr [rbp - 0x18], rdx; nop; pop rbp; ret; 
0x0000000000402e05: clc; mov qword ptr [rbp - 0x10], rsi; mov rax, qword ptr [rbp - 0x10]; pop rbp; ret; 
0x0000000000403e96: clc; mov qword ptr [rbp - 0x10], rsi; mov rax, qword ptr [rbp - 0x10]; sub rax, qword ptr [rbp - 8]; pop rbp; ret; 
0x0000000000402e1b: clc; mov qword ptr [rbp - 0x10], rsi; nop; pop rbp; ret; 
0x00000000004057e6: clc; mov qword ptr [rdx], rax; nop; leave; ret; 
0x0000000000403dc9: clc; mov rax, qword ptr [rax + 0x10]; pop rbp; ret; 
0x0000000000403681: clc; mov rax, qword ptr [rax + 0x18]; pop rbp; ret; 
0x0000000000402ef3: clc; mov rax, qword ptr [rax + 8]; pop rbp; ret; 
0x0000000000404539: clc; mov rax, qword ptr [rax]; pop rbp; ret; 
0x0000000000402e81: clc; mov rax, qword ptr [rbp - 8]; mov qword ptr [rax], 0; nop; pop rbp; ret; 
0x0000000000403dc5: clc; mov rax, qword ptr [rbp - 8]; mov rax, qword ptr [rax + 0x10]; pop rbp; ret; 
0x000000000040367d: clc; mov rax, qword ptr [rbp - 8]; mov rax, qword ptr [rax + 0x18]; pop rbp; ret; 
0x0000000000402eef: clc; mov rax, qword ptr [rbp - 8]; mov rax, qword ptr [rax + 8]; pop rbp; ret; 
0x0000000000404535: clc; mov rax, qword ptr [rbp - 8]; mov rax, qword ptr [rax]; pop rbp; ret; 
0x00000000004031c3: clc; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x3672; leave; ret; 
0x00000000004032ab: clc; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x3852; leave; ret; 
0x0000000000403f97: clc; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x4782; leave; ret; 
0x0000000000404663: clc; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x4d9e; leave; ret; 
0x0000000000404791: clc; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x4e6c; leave; ret; 
0x0000000000404c87: clc; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x5190; leave; ret; 
0x0000000000404d19: clc; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x51d3; leave; ret; 
0x0000000000404e7b: clc; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x534c; leave; ret; 
0x00000000004051c4: clc; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x5634; leave; ret; 
0x00000000004051e2: clc; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x5652; leave; ret; 
0x000000000040526d: clc; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x5664; leave; ret; 
0x000000000040528b: clc; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x5676; leave; ret; 
0x0000000000405643: clc; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x57ed; leave; ret; 
0x0000000000405685: clc; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x5800; leave; ret; 
0x00000000004056b5: clc; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x581e; leave; ret; 
0x000000000040580f: clc; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x58b4; leave; ret; 
0x00000000004058d5: clc; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x5973; leave; ret; 
0x0000000000405982: clc; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x5991; leave; ret; 
0x00000000004059a0: clc; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x59af; leave; ret; 
0x00000000004043bd: clc; mov rax, qword ptr [rbp - 8]; pop rbp; ret; 
0x000000000040310f: clc; mov rdi, rax; call 0x22b0; nop; leave; ret; 
0x0000000000404813: clc; mov rdi, rax; call 0x2e76; nop; leave; ret; 
0x0000000000402fb9: clc; mov rdi, rax; call 0x2f66; nop; leave; ret; 
0x00000000004031a7: clc; mov rdi, rax; call 0x2fa6; nop; leave; ret; 
0x0000000000403061: clc; mov rdi, rax; call 0x2fc6; nop; leave; ret; 
0x0000000000402f2d: clc; mov rdi, rax; call 0x311c; nop; leave; ret; 
0x0000000000402f59: clc; mov rdi, rax; call 0x312c; nop; leave; ret; 
0x0000000000402f99: clc; mov rdi, rax; call 0x313c; nop; leave; ret; 
0x0000000000402f79: clc; mov rdi, rax; call 0x315c; nop; leave; ret; 
0x00000000004059d7: clc; mov rdi, rax; call 0x317c; nop; leave; ret; 
0x0000000000403081: clc; mov rdi, rax; call 0x33ba; nop; leave; ret; 
0x000000000040314f: clc; mov rdi, rax; call 0x35a2; nop; leave; ret; 
0x000000000040316f: clc; mov rdi, rax; call 0x35c2; nop; leave; ret; 
0x0000000000403595: clc; mov rdi, rax; call 0x35d2; nop; leave; ret; 
0x00000000004031c7: clc; mov rdi, rax; call 0x3672; leave; ret; 
0x00000000004032af: clc; mov rdi, rax; call 0x3852; leave; ret; 
0x00000000004033db: clc; mov rdi, rax; call 0x3b16; nop; leave; ret; 
0x00000000004035b5: clc; mov rdi, rax; call 0x3daa; nop; leave; ret; 
0x0000000000403b29: clc; mov rdi, rax; call 0x43b2; nop; leave; ret; 
0x0000000000403f9b: clc; mov rdi, rax; call 0x4782; leave; ret; 
0x00000000004043a6: clc; mov rdi, rax; call 0x4b66; nop; leave; ret; 
0x0000000000404667: clc; mov rdi, rax; call 0x4d9e; leave; ret; 
0x0000000000404795: clc; mov rdi, rax; call 0x4e6c; leave; ret; 
0x0000000000404c8b: clc; mov rdi, rax; call 0x5190; leave; ret; 
0x0000000000404d1d: clc; mov rdi, rax; call 0x51d3; leave; ret; 
0x0000000000404d3f: clc; mov rdi, rax; call 0x51f2; nop; leave; ret; 
0x0000000000404d5f: clc; mov rdi, rax; call 0x5202; nop; leave; ret; 
0x0000000000404e7f: clc; mov rdi, rax; call 0x534c; leave; ret; 
0x000000000040511b: clc; mov rdi, rax; call 0x5544; mov rax, qword ptr [rbp - 8]; leave; ret; 
0x00000000004051c8: clc; mov rdi, rax; call 0x5634; leave; ret; 
0x00000000004051e6: clc; mov rdi, rax; call 0x5652; leave; ret; 
0x0000000000405271: clc; mov rdi, rax; call 0x5664; leave; ret; 
0x000000000040528f: clc; mov rdi, rax; call 0x5676; leave; ret; 
0x0000000000405647: clc; mov rdi, rax; call 0x57ed; leave; ret; 
0x0000000000405689: clc; mov rdi, rax; call 0x5800; leave; ret; 
0x00000000004056b9: clc; mov rdi, rax; call 0x581e; leave; ret; 
0x0000000000405813: clc; mov rdi, rax; call 0x58b4; leave; ret; 
0x00000000004058d9: clc; mov rdi, rax; call 0x5973; leave; ret; 
0x0000000000405986: clc; mov rdi, rax; call 0x5991; leave; ret; 
0x00000000004059a4: clc; mov rdi, rax; call 0x59af; leave; ret; 
0x0000000000402f0d: clc; mov rdx, qword ptr [rbp - 0x10]; mov qword ptr [rax + 8], rdx; nop; pop rbp; ret; 
0x00000000004043d7: clc; mov rdx, qword ptr [rbp - 0x10]; mov qword ptr [rax], rdx; nop; pop rbp; ret; 
0x0000000000403eff: clc; mov rsi, rcx; mov rdi, rax; call 0x4672; leave; ret; 
0x0000000000404e5d: clc; mov rsi, rcx; mov rdi, rax; call 0x52ec; leave; ret; 
0x00000000004039d9: clc; mov rsi, rdx; mov rdi, rax; call 0x3edc; leave; ret; 
0x0000000000405901: clc; movabs rax, 0xfffffffffffffff; pop rbp; ret; 
0x0000000000403127: clc; nop; pop rbp; ret; 
0x0000000000403e88: clc; pop rbp; ret; 
0x0000000000404c90: cld; add al, 0; add cl, cl; ret; 
0x0000000000403e80: cli; push rbp; mov rbp, rsp; mov qword ptr [rbp - 8], rdi; pop rbp; ret; 
0x0000000000402523: cli; ret; 
0x00000000004059e7: cli; sub rsp, 8; add rsp, 8; ret; 
0x0000000000402003: cli; sub rsp, 8; mov rax, qword ptr [rip + 0x7fe1]; test rax, rax; je 0x2016; call rax; 
0x000000000040404b: cmp byte ptr [rbx + 0x41], bl; pop rsp; pop r13; pop rbp; ret; 
0x00000000004030ab: cmp dl, al; sete al; pop rbp; ret; 
0x0000000000403e12: cmp dword ptr [rbp - 0x20], 0; jne 0x3de6; nop; nop; leave; ret; 
0x0000000000403e74: cmp dword ptr [rbp - 8], 0; sete al; pop rbp; ret; 
0x0000000000403328: cmp edx, eax; sete al; pop rbp; ret; 
0x00000000004032d9: cmp edx, eax; setne al; pop rbp; ret; 
0x0000000000403e11: cmp qword ptr [rbp - 0x20], 0; jne 0x3de6; nop; nop; leave; ret; 
0x0000000000403e73: cmp qword ptr [rbp - 8], 0; sete al; pop rbp; ret; 
0x0000000000403327: cmp rdx, rax; sete al; pop rbp; ret; 
0x00000000004032d8: cmp rdx, rax; setne al; pop rbp; ret; 
0x0000000000405818: cwde; add byte ptr [rax], al; add cl, cl; ret; 
0x0000000000403c46: dec dword ptr [rax - 0x75]; clc; leave; ret; 
0x000000000040303e: dec dword ptr [rax - 0x75]; clc; mov qword ptr [rax + 0x30], 0; nop; leave; ret; 
0x0000000000402843: dec dword ptr [rax - 0x75]; pop rbp; clc; leave; ret; 
0x0000000000402621: dec dword ptr [rax - 0x77]; ret 0x8b48; 
0x000000000040260c: dec dword ptr [rax - 0x77]; ret 0x8d48; 
0x00000000004048c5: dec dword ptr [rax - 0x77]; ret; 
0x000000000040590a: dec dword ptr [rdi]; pop rbp; ret; 
0x0000000000403ed8: dec ecx; ret; 
0x0000000000402eae: div dword ptr [rbp - 0x18]; mov rax, rdx; pop rbp; ret; 
0x0000000000402ead: div qword ptr [rbp - 0x18]; mov rax, rdx; pop rbp; ret; 
0x0000000000403e7d: endbr64; push rbp; mov rbp, rsp; mov qword ptr [rbp - 8], rdi; pop rbp; ret; 
0x0000000000402520: endbr64; ret; 
0x00000000004059e4: endbr64; sub rsp, 8; add rsp, 8; ret; 
0x0000000000402000: endbr64; sub rsp, 8; mov rax, qword ptr [rip + 0x7fe1]; test rax, rax; je 0x2016; call rax; 
0x000000000040464b: fdivp st(7); dec dword ptr [rax - 0x75]; pop rbp; clc; leave; ret; 
0x0000000000404c6e: fdivr st(7); dec dword ptr [rax - 0x75]; pop rbp; clc; leave; ret; 
0x00000000004052b6: fiadd dword ptr [rbx]; add byte ptr [rax], al; mov rdi, rax; call 0x56a6; leave; ret; 
0x0000000000402f7e: fiadd dword ptr [rcx]; add byte ptr [rax], al; nop; leave; ret; 
0x0000000000405294: fiadd word ptr [rbx]; add byte ptr [rax], al; leave; ret; 
0x0000000000403fa0: fiadd word ptr [rdi]; add byte ptr [rax], al; leave; ret; 
0x0000000000404b5f: fmul dword ptr [rax - 0x75]; clc; leave; ret; 
0x0000000000402e70: hlt; mov eax, dword ptr [rbp - 0xc]; pop rbp; ret; 
0x0000000000402515: hlt; nop word ptr cs:[rax + rax]; endbr64; ret; 
0x0000000000402e73: hlt; pop rbp; ret; 
0x0000000000402cf3: idiv bh; dec dword ptr [rax - 0x77]; ret 0x8d48; 
0x0000000000404448: idiv edi; dec dword ptr [rax - 0x75]; clc; leave; ret; 
0x0000000000405241: imul edx, ecx, -1; dec ecx; ret; 
0x00000000004052be: in al, 3; add byte ptr [rax], al; leave; ret; 
0x0000000000402006: in al, dx; or byte ptr [rax - 0x75], cl; add eax, 0x7fe1; test rax, rax; je 0x2016; call rax; 
0x0000000000403e6e: in eax, 0x48; mov dword ptr [rbp - 8], edi; cmp qword ptr [rbp - 8], 0; sete al; pop rbp; ret; 
0x0000000000402e69: in eax, 0x48; mov dword ptr [rbp - 8], edi; mov dword ptr [rbp - 0xc], esi; mov eax, dword ptr [rbp - 0xc]; pop rbp; ret; 
0x000000000040524e: in eax, 0x48; mov dword ptr [rbp - 8], edi; mov qword ptr [rbp - 0x10], rsi; mov eax, 1; pop rbp; ret; 
0x0000000000402e01: in eax, 0x48; mov dword ptr [rbp - 8], edi; mov qword ptr [rbp - 0x10], rsi; mov rax, qword ptr [rbp - 0x10]; pop rbp; ret; 
0x0000000000402e17: in eax, 0x48; mov dword ptr [rbp - 8], edi; mov qword ptr [rbp - 0x10], rsi; nop; pop rbp; ret; 
0x0000000000403dc1: in eax, 0x48; mov dword ptr [rbp - 8], edi; mov rax, qword ptr [rbp - 8]; mov rax, qword ptr [rax + 0x10]; pop rbp; ret; 
0x0000000000403679: in eax, 0x48; mov dword ptr [rbp - 8], edi; mov rax, qword ptr [rbp - 8]; mov rax, qword ptr [rax + 0x18]; pop rbp; ret; 
0x0000000000402eeb: in eax, 0x48; mov dword ptr [rbp - 8], edi; mov rax, qword ptr [rbp - 8]; mov rax, qword ptr [rax + 8]; pop rbp; ret; 
0x0000000000404531: in eax, 0x48; mov dword ptr [rbp - 8], edi; mov rax, qword ptr [rbp - 8]; mov rax, qword ptr [rax]; pop rbp; ret; 
0x00000000004043b9: in eax, 0x48; mov dword ptr [rbp - 8], edi; mov rax, qword ptr [rbp - 8]; pop rbp; ret; 
0x00000000004058fd: in eax, 0x48; mov dword ptr [rbp - 8], edi; movabs rax, 0xfffffffffffffff; pop rbp; ret; 
0x0000000000403123: in eax, 0x48; mov dword ptr [rbp - 8], edi; nop; pop rbp; ret; 
0x0000000000403e84: in eax, 0x48; mov dword ptr [rbp - 8], edi; pop rbp; ret; 
0x00000000004025dd: in eax, 0x58; pop rsp; pop rdi; nop; pop rbp; ret; 
0x0000000000404cb9: in eax, 4; add byte ptr [rax], al; nop; leave; ret; 
0x0000000000404b5b: inc dword ptr [rax + rax*8 - 0x74b7278b]; clc; leave; ret; 
0x0000000000402deb: inc dword ptr [rax]; add byte ptr [rdi + 1], bh; call 0x2d59; pop rbp; ret; 
0x00000000004030ee: inc dword ptr [rbx - 0x3f7bfe10]; jne 0x30cc; mov rax, qword ptr [rbp - 8]; leave; ret; 
0x0000000000404d01: iretd; call 0x4f58; nop; leave; ret; 
0x000000000040424f: ja 0x4259; add byte ptr [rax], al; mov rax, qword ptr [rbp - 8]; leave; ret; 
0x0000000000402d8d: jae 0x2d8f; add byte ptr [rax - 0x77], cl; ret 0x8d48; 
0x0000000000402dbf: jae 0x2dc1; add byte ptr [rax - 0x77], cl; ret 0x8d48; 
0x0000000000403303: jae 0x330a; add byte ptr [rax], al; leave; ret; 
0x0000000000402012: je 0x2016; call rax; 
0x0000000000402012: je 0x2016; call rax; add rsp, 8; ret; 
0x000000000040253b: je 0x2550; mov eax, 0; test rax, rax; je 0x2550; mov edi, 0x40a160; jmp rax; 
0x0000000000402545: je 0x2550; mov edi, 0x40a160; jmp rax; 
0x000000000040257d: je 0x2590; mov eax, 0; test rax, rax; je 0x2590; mov edi, 0x40a160; jmp rax; 
0x0000000000402587: je 0x2590; mov edi, 0x40a160; jmp rax; 
0x0000000000402d0f: je 0x2d11; add byte ptr [rax - 0x77], cl; ret 0x80be; 
0x00000000004055a9: je 0x55b6; mov rax, qword ptr [rbp - 0x18]; mov qword ptr [rax], 0; nop; leave; ret; 
0x000000000040200c: jg 0x200e; add byte ptr [rax - 0x7b], cl; sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x00000000004025b9: jg 0x25bb; add byte ptr [rcx], al; pop rbp; ret; 
0x0000000000402e04: jge 0x2dfe; mov qword ptr [rbp - 0x10], rsi; mov rax, qword ptr [rbp - 0x10]; pop rbp; ret; 
0x0000000000402e1a: jge 0x2e14; mov qword ptr [rbp - 0x10], rsi; nop; pop rbp; ret; 
0x0000000000402e6c: jge 0x2e66; mov dword ptr [rbp - 0xc], esi; mov eax, dword ptr [rbp - 0xc]; pop rbp; ret; 
0x0000000000402e80: jge 0x2e7a; mov rax, qword ptr [rbp - 8]; mov qword ptr [rax], 0; nop; pop rbp; ret; 
0x0000000000402eee: jge 0x2ee8; mov rax, qword ptr [rbp - 8]; mov rax, qword ptr [rax + 8]; pop rbp; ret; 
0x0000000000403126: jge 0x3120; nop; pop rbp; ret; 
0x0000000000403136: jge 0x3130; nop; pop rbp; ret; 
0x00000000004031c2: jge 0x31bc; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x3672; leave; ret; 
0x00000000004032aa: jge 0x32a4; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x3852; leave; ret; 
0x00000000004035cc: jge 0x35c6; nop; pop rbp; ret; 
0x000000000040367c: jge 0x3676; mov rax, qword ptr [rbp - 8]; mov rax, qword ptr [rax + 0x18]; pop rbp; ret; 
0x0000000000403db4: jge 0x3dae; nop; pop rbp; ret; 
0x0000000000403dc4: jge 0x3dbe; mov rax, qword ptr [rbp - 8]; mov rax, qword ptr [rax + 0x10]; pop rbp; ret; 
0x0000000000403e13: jge 0x3df5; add byte ptr [rbp - 0x32], dh; nop; nop; leave; ret; 
0x0000000000403e71: jge 0x3e6b; cmp qword ptr [rbp - 8], 0; sete al; pop rbp; ret; 
0x0000000000403e87: jge 0x3e81; pop rbp; ret; 
0x0000000000403e95: jge 0x3e8f; mov qword ptr [rbp - 0x10], rsi; mov rax, qword ptr [rbp - 0x10]; sub rax, qword ptr [rbp - 8]; pop rbp; ret; 
0x0000000000403f96: jge 0x3f90; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x4782; leave; ret; 
0x00000000004043bc: jge 0x43b6; mov rax, qword ptr [rbp - 8]; pop rbp; ret; 
0x000000000040441c: jge 0x4416; mov rax, qword ptr [rbp - 8]; pop rbp; ret; 
0x000000000040445b: jge 0x4455; mov rax, qword ptr [rbp - 8]; pop rbp; ret; 
0x000000000040451d: jge 0x4517; mov qword ptr [rbp - 0x10], rsi; mov rax, qword ptr [rbp - 0x10]; pop rbp; ret; 
0x0000000000404534: jge 0x452e; mov rax, qword ptr [rbp - 8]; mov rax, qword ptr [rax]; pop rbp; ret; 
0x0000000000404662: jge 0x465c; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x4d9e; leave; ret; 
0x0000000000404790: jge 0x478a; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x4e6c; leave; ret; 
0x00000000004047d4: jge 0x47ce; mov rax, qword ptr [rbp - 8]; pop rbp; ret; 
0x00000000004047e6: jge 0x47e0; mov rax, qword ptr [rbp - 8]; pop rbp; ret; 
0x00000000004047f8: jge 0x47f2; mov rax, qword ptr [rbp - 8]; pop rbp; ret; 
0x00000000004049c8: jge 0x49c2; mov qword ptr [rbp - 0x10], rsi; mov qword ptr [rbp - 0x18], rdx; nop; pop rbp; ret; 
0x0000000000404b16: jge 0x4b10; pop rbp; ret; 
0x0000000000404c86: jge 0x4c80; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x5190; leave; ret; 
0x0000000000404d18: jge 0x4d12; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x51d3; leave; ret; 
0x0000000000404da8: jge 0x4da2; mov rax, qword ptr [rbp - 8]; pop rbp; ret; 
0x0000000000404e7a: jge 0x4e74; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x534c; leave; ret; 
0x0000000000404ee0: jge 0x4eda; mov rax, qword ptr [rbp - 8]; pop rbp; ret; 
0x000000000040519a: jge 0x5194; mov rax, qword ptr [rbp - 8]; pop rbp; ret; 
0x00000000004051ac: jge 0x51a6; mov qword ptr [rbp - 0x10], rsi; nop; pop rbp; ret; 
0x00000000004051c3: jge 0x51bd; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x5634; leave; ret; 
0x00000000004051e1: jge 0x51db; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x5652; leave; ret; 
0x00000000004051fc: jge 0x51f6; nop; pop rbp; ret; 
0x000000000040520c: jge 0x5206; nop; pop rbp; ret; 
0x0000000000405251: jge 0x524b; mov qword ptr [rbp - 0x10], rsi; mov eax, 1; pop rbp; ret; 
0x000000000040526c: jge 0x5266; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x5664; leave; ret; 
0x000000000040528a: jge 0x5284; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x5676; leave; ret; 
0x0000000000405356: jge 0x5350; mov rax, qword ptr [rbp - 8]; pop rbp; ret; 
0x0000000000405642: jge 0x563c; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x57ed; leave; ret; 
0x000000000040565c: jge 0x5656; mov rax, qword ptr [rbp - 8]; pop rbp; ret; 
0x000000000040566e: jge 0x5668; mov rax, qword ptr [rbp - 8]; pop rbp; ret; 
0x0000000000405684: jge 0x567e; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x5800; leave; ret; 
0x000000000040569e: jge 0x5698; mov rax, qword ptr [rbp - 8]; pop rbp; ret; 
0x00000000004056b4: jge 0x56ae; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x581e; leave; ret; 
0x00000000004057f7: jge 0x57f1; mov rax, qword ptr [rbp - 8]; pop rbp; ret; 
0x000000000040580e: jge 0x5808; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x58b4; leave; ret; 
0x0000000000405828: jge 0x5822; mov rax, qword ptr [rbp - 8]; pop rbp; ret; 
0x00000000004058ab: jge 0x58a5; mov rax, qword ptr [rbp - 8]; pop rbp; ret; 
0x00000000004058be: jge 0x58b8; mov rax, qword ptr [rbp - 8]; pop rbp; ret; 
0x00000000004058d4: jge 0x58ce; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x5973; leave; ret; 
0x00000000004058ee: jge 0x58e8; mov rax, qword ptr [rbp - 8]; pop rbp; ret; 
0x0000000000405900: jge 0x58fa; movabs rax, 0xfffffffffffffff; pop rbp; ret; 
0x0000000000405981: jge 0x597b; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x5991; leave; ret; 
0x000000000040599f: jge 0x5999; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x59af; leave; ret; 
0x00000000004059b9: jge 0x59b3; mov rax, qword ptr [rbp - 8]; mov rax, qword ptr [rax]; pop rbp; ret; 
0x000000000040254c: jmp rax; 
0x0000000000402e08: jne 0x2dfa; mov rax, qword ptr [rbp - 0x10]; pop rbp; ret; 
0x0000000000402e1e: jne 0x2e10; nop; pop rbp; ret; 
0x0000000000402e6f: jne 0x2e65; mov eax, dword ptr [rbp - 0xc]; pop rbp; ret; 
0x0000000000402eaf: jne 0x2e99; mov rax, rdx; pop rbp; ret; 
0x00000000004030f4: jne 0x30cc; mov rax, qword ptr [rbp - 8]; leave; ret; 
0x0000000000403e16: jne 0x3de6; nop; nop; leave; ret; 
0x0000000000403e99: jne 0x3e8b; mov rax, qword ptr [rbp - 0x10]; sub rax, qword ptr [rbp - 8]; pop rbp; ret; 
0x0000000000404521: jne 0x4513; mov rax, qword ptr [rbp - 0x10]; pop rbp; ret; 
0x00000000004049cc: jne 0x49be; mov qword ptr [rbp - 0x18], rdx; nop; pop rbp; ret; 
0x0000000000404b5e: jne 0x4b38; mov rax, qword ptr [rbp - 8]; leave; ret; 
0x0000000000405188: jne 0x5144; mov rax, qword ptr [rbp - 0x18]; leave; ret; 
0x00000000004051b0: jne 0x51a2; nop; pop rbp; ret; 
0x0000000000405255: jne 0x5247; mov eax, 1; pop rbp; ret; 
0x0000000000402512: jp 0x2514; add ah, dh; nop word ptr cs:[rax + rax]; endbr64; ret; 
0x0000000000404d96: js 0x4d9c; add byte ptr [rax], al; nop; leave; ret; 
0x0000000000404693: lea eax, [rbp - 1]; mov rsi, rcx; mov rdi, rax; call 0x2e90; leave; ret; 
0x000000000040533c: lea eax, [rbp - 2]; mov rsi, rcx; mov rdi, rax; call 0x2e90; leave; ret; 
0x0000000000402dd0: lea eax, [rip + 0x2bee]; mov rdi, rax; call 0x2370; nop; leave; ret; 
0x0000000000404692: lea rax, [rbp - 1]; mov rsi, rcx; mov rdi, rax; call 0x2e90; leave; ret; 
0x000000000040533b: lea rax, [rbp - 2]; mov rsi, rcx; mov rdi, rax; call 0x2e90; leave; ret; 
0x0000000000402dcf: lea rax, [rip + 0x2bee]; mov rdi, rax; call 0x2370; nop; leave; ret; 
0x0000000000402848: leave; ret; 
0x00000000004030f0: lock add dword ptr [rax + rax*8 - 0x74b7298b], eax; clc; leave; ret; 
0x0000000000403e9e: lock sub rax, qword ptr [rbp - 8]; pop rbp; ret; 
0x0000000000404d22: lodsd eax, dword ptr [rsi]; add al, 0; add cl, cl; ret; 
0x000000000040200b: loope 0x208c; add byte ptr [rax], al; test rax, rax; je 0x2016; call rax; 
0x0000000000404326: loope 0x4327; dec dword ptr [rax - 0x75]; pop rbp; clc; leave; ret; 
0x00000000004043ab: mov bh, 7; add byte ptr [rax], al; nop; leave; ret; 
0x00000000004025b6: mov byte ptr [rip + 0x7f53], 1; pop rbp; ret; 
0x0000000000404087: mov ch, 4; add byte ptr [rax], al; nop; leave; ret; 
0x00000000004030a9: mov dh, 0; cmp dl, al; sete al; pop rbp; ret; 
0x00000000004045ba: mov dh, 0xc0; test rax, rax; setne al; pop rbp; ret; 
0x0000000000403635: mov dword ptr [rax + 0x10], 0; nop; leave; ret; 
0x0000000000403044: mov dword ptr [rax + 0x30], 0; nop; leave; ret; 
0x0000000000405869: mov dword ptr [rax + 8], 0; nop; leave; ret; 
0x0000000000402ed9: mov dword ptr [rax + 8], 0; nop; pop rbp; ret; 
0x000000000040562b: mov dword ptr [rax + 8], edx; mov rax, qword ptr [rbp - 8]; pop rbp; ret; 
0x0000000000402f13: mov dword ptr [rax + 8], edx; nop; pop rbp; ret; 
0x0000000000404e0d: mov dword ptr [rax + rax], eax; add byte ptr [rax - 0x77], cl; ret 0x8b48; 
0x00000000004055b0: mov dword ptr [rax], 0; nop; leave; ret; 
0x0000000000402e87: mov dword ptr [rax], 0; nop; pop rbp; ret; 
0x0000000000405862: mov dword ptr [rax], edx; mov rax, qword ptr [rbp - 8]; mov qword ptr [rax + 8], 0; nop; leave; ret; 
0x0000000000405102: mov dword ptr [rax], edx; nop; leave; ret; 
0x00000000004043dd: mov dword ptr [rax], edx; nop; pop rbp; ret; 
0x0000000000405254: mov dword ptr [rbp - 0x10], esi; mov eax, 1; pop rbp; ret; 
0x00000000004049cb: mov dword ptr [rbp - 0x10], esi; mov qword ptr [rbp - 0x18], rdx; nop; pop rbp; ret; 
0x0000000000402e07: mov dword ptr [rbp - 0x10], esi; mov rax, qword ptr [rbp - 0x10]; pop rbp; ret; 
0x0000000000403e98: mov dword ptr [rbp - 0x10], esi; mov rax, qword ptr [rbp - 0x10]; sub rax, qword ptr [rbp - 8]; pop rbp; ret; 
0x0000000000402e1d: mov dword ptr [rbp - 0x10], esi; nop; pop rbp; ret; 
0x00000000004049cf: mov dword ptr [rbp - 0x18], edx; nop; pop rbp; ret; 
0x0000000000402e6e: mov dword ptr [rbp - 0xc], esi; mov eax, dword ptr [rbp - 0xc]; pop rbp; ret; 
0x0000000000403e70: mov dword ptr [rbp - 8], edi; cmp qword ptr [rbp - 8], 0; sete al; pop rbp; ret; 
0x0000000000402e6b: mov dword ptr [rbp - 8], edi; mov dword ptr [rbp - 0xc], esi; mov eax, dword ptr [rbp - 0xc]; pop rbp; ret; 
0x0000000000405250: mov dword ptr [rbp - 8], edi; mov qword ptr [rbp - 0x10], rsi; mov eax, 1; pop rbp; ret; 
0x00000000004049c7: mov dword ptr [rbp - 8], edi; mov qword ptr [rbp - 0x10], rsi; mov qword ptr [rbp - 0x18], rdx; nop; pop rbp; ret; 
0x0000000000402e03: mov dword ptr [rbp - 8], edi; mov qword ptr [rbp - 0x10], rsi; mov rax, qword ptr [rbp - 0x10]; pop rbp; ret; 
0x0000000000403e94: mov dword ptr [rbp - 8], edi; mov qword ptr [rbp - 0x10], rsi; mov rax, qword ptr [rbp - 0x10]; sub rax, qword ptr [rbp - 8]; pop rbp; ret; 
0x0000000000402e19: mov dword ptr [rbp - 8], edi; mov qword ptr [rbp - 0x10], rsi; nop; pop rbp; ret; 
0x0000000000402e7f: mov dword ptr [rbp - 8], edi; mov rax, qword ptr [rbp - 8]; mov qword ptr [rax], 0; nop; pop rbp; ret; 
0x0000000000403dc3: mov dword ptr [rbp - 8], edi; mov rax, qword ptr [rbp - 8]; mov rax, qword ptr [rax + 0x10]; pop rbp; ret; 
0x000000000040367b: mov dword ptr [rbp - 8], edi; mov rax, qword ptr [rbp - 8]; mov rax, qword ptr [rax + 0x18]; pop rbp; ret; 
0x0000000000402eed: mov dword ptr [rbp - 8], edi; mov rax, qword ptr [rbp - 8]; mov rax, qword ptr [rax + 8]; pop rbp; ret; 
0x0000000000404533: mov dword ptr [rbp - 8], edi; mov rax, qword ptr [rbp - 8]; mov rax, qword ptr [rax]; pop rbp; ret; 
0x00000000004031c1: mov dword ptr [rbp - 8], edi; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x3672; leave; ret; 
0x00000000004032a9: mov dword ptr [rbp - 8], edi; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x3852; leave; ret; 
0x0000000000403f95: mov dword ptr [rbp - 8], edi; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x4782; leave; ret; 
0x0000000000404661: mov dword ptr [rbp - 8], edi; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x4d9e; leave; ret; 
0x000000000040478f: mov dword ptr [rbp - 8], edi; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x4e6c; leave; ret; 
0x0000000000404c85: mov dword ptr [rbp - 8], edi; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x5190; leave; ret; 
0x0000000000404d17: mov dword ptr [rbp - 8], edi; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x51d3; leave; ret; 
0x0000000000404e79: mov dword ptr [rbp - 8], edi; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x534c; leave; ret; 
0x00000000004051c2: mov dword ptr [rbp - 8], edi; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x5634; leave; ret; 
0x00000000004051e0: mov dword ptr [rbp - 8], edi; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x5652; leave; ret; 
0x000000000040526b: mov dword ptr [rbp - 8], edi; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x5664; leave; ret; 
0x0000000000405289: mov dword ptr [rbp - 8], edi; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x5676; leave; ret; 
0x0000000000405641: mov dword ptr [rbp - 8], edi; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x57ed; leave; ret; 
0x0000000000405683: mov dword ptr [rbp - 8], edi; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x5800; leave; ret; 
0x00000000004056b3: mov dword ptr [rbp - 8], edi; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x581e; leave; ret; 
0x000000000040580d: mov dword ptr [rbp - 8], edi; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x58b4; leave; ret; 
0x00000000004058d3: mov dword ptr [rbp - 8], edi; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x5973; leave; ret; 
0x0000000000405980: mov dword ptr [rbp - 8], edi; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x5991; leave; ret; 
0x000000000040599e: mov dword ptr [rbp - 8], edi; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x59af; leave; ret; 
0x00000000004043bb: mov dword ptr [rbp - 8], edi; mov rax, qword ptr [rbp - 8]; pop rbp; ret; 
0x00000000004058ff: mov dword ptr [rbp - 8], edi; movabs rax, 0xfffffffffffffff; pop rbp; ret; 
0x0000000000403125: mov dword ptr [rbp - 8], edi; nop; pop rbp; ret; 
0x0000000000403e86: mov dword ptr [rbp - 8], edi; pop rbp; ret; 
0x00000000004057e8: mov dword ptr [rdx], eax; nop; leave; ret; 
0x0000000000403f56: mov eax, 0; leave; ret; 
0x0000000000404e2e: mov eax, 0; mov rbx, qword ptr [rbp - 8]; leave; ret; 
0x0000000000404369: mov eax, 0; pop rbp; ret; 
0x000000000040253d: mov eax, 0; test rax, rax; je 0x2550; mov edi, 0x40a160; jmp rax; 
0x000000000040257f: mov eax, 0; test rax, rax; je 0x2590; mov edi, 0x40a160; jmp rax; 
0x0000000000405257: mov eax, 1; pop rbp; ret; 
0x0000000000403dcb: mov eax, dword ptr [rax + 0x10]; pop rbp; ret; 
0x0000000000403683: mov eax, dword ptr [rax + 0x18]; pop rbp; ret; 
0x0000000000402ef5: mov eax, dword ptr [rax + 8]; pop rbp; ret; 
0x00000000004055f1: mov eax, dword ptr [rax]; add rax, 8; mov rdi, rax; call 0x3f88; leave; ret; 
0x00000000004041a5: mov eax, dword ptr [rax]; add rax, 8; mov rdi, rax; call 0x4782; leave; ret; 
0x00000000004052e2: mov eax, dword ptr [rax]; cmp edx, eax; sete al; pop rbp; ret; 
0x0000000000403325: mov eax, dword ptr [rax]; cmp rdx, rax; sete al; pop rbp; ret; 
0x00000000004032d6: mov eax, dword ptr [rax]; cmp rdx, rax; setne al; pop rbp; ret; 
0x0000000000403ecd: mov eax, dword ptr [rax]; mov esi, eax; mov rdi, rdx; call 0x2e62; leave; ret; 
0x000000000040453b: mov eax, dword ptr [rax]; pop rbp; ret; 
0x000000000040418a: mov eax, dword ptr [rbp - 0x10]; leave; ret; 
0x0000000000402ea5: mov eax, dword ptr [rbp - 0x10]; mov edx, 0; div qword ptr [rbp - 0x18]; mov rax, rdx; pop rbp; ret; 
0x0000000000403321: mov eax, dword ptr [rbp - 0x10]; mov rax, qword ptr [rax]; cmp rdx, rax; sete al; pop rbp; ret; 
0x00000000004032d2: mov eax, dword ptr [rbp - 0x10]; mov rax, qword ptr [rax]; cmp rdx, rax; setne al; pop rbp; ret; 
0x0000000000405237: mov eax, dword ptr [rbp - 0x10]; mov rsi, rdx; mov rdi, rax; call 0x23b0; leave; ret; 
0x00000000004030a5: mov eax, dword ptr [rbp - 0x10]; movzx eax, byte ptr [rax]; cmp dl, al; sete al; pop rbp; ret; 
0x0000000000402e0b: mov eax, dword ptr [rbp - 0x10]; pop rbp; ret; 
0x0000000000403e9c: mov eax, dword ptr [rbp - 0x10]; sub rax, qword ptr [rbp - 8]; pop rbp; ret; 
0x000000000040384d: mov eax, dword ptr [rbp - 0x18]; leave; ret; 
0x00000000004052df: mov eax, dword ptr [rbp - 0x18]; mov eax, dword ptr [rax]; cmp edx, eax; sete al; pop rbp; ret; 
0x00000000004055ac: mov eax, dword ptr [rbp - 0x18]; mov qword ptr [rax], 0; nop; leave; ret; 
0x0000000000403b0d: mov eax, dword ptr [rbp - 0x18]; mov rbx, qword ptr [rbp - 8]; leave; ret; 
0x0000000000402e53: mov eax, dword ptr [rbp - 0x18]; mov rdi, rax; call 0x22e0; nop; leave; ret; 
0x00000000004050fa: mov eax, dword ptr [rbp - 0x38]; mov rdx, qword ptr [rbp - 0x18]; mov qword ptr [rax], rdx; nop; leave; ret; 
0x0000000000402e71: mov eax, dword ptr [rbp - 0xc]; pop rbp; ret; 
0x00000000004030f7: mov eax, dword ptr [rbp - 8]; leave; ret; 
0x0000000000403631: mov eax, dword ptr [rbp - 8]; mov qword ptr [rax + 0x10], 0; nop; leave; ret; 
0x0000000000403040: mov eax, dword ptr [rbp - 8]; mov qword ptr [rax + 0x30], 0; nop; leave; ret; 
0x0000000000405865: mov eax, dword ptr [rbp - 8]; mov qword ptr [rax + 8], 0; nop; leave; ret; 
0x0000000000402ed5: mov eax, dword ptr [rbp - 8]; mov qword ptr [rax + 8], 0; nop; pop rbp; ret; 
0x0000000000405627: mov eax, dword ptr [rbp - 8]; mov qword ptr [rax + 8], rdx; mov rax, qword ptr [rbp - 8]; pop rbp; ret; 
0x0000000000402e83: mov eax, dword ptr [rbp - 8]; mov qword ptr [rax], 0; nop; pop rbp; ret; 
0x0000000000403dc7: mov eax, dword ptr [rbp - 8]; mov rax, qword ptr [rax + 0x10]; pop rbp; ret; 
0x000000000040367f: mov eax, dword ptr [rbp - 8]; mov rax, qword ptr [rax + 0x18]; pop rbp; ret; 
0x0000000000402ef1: mov eax, dword ptr [rbp - 8]; mov rax, qword ptr [rax + 8]; pop rbp; ret; 
0x0000000000404537: mov eax, dword ptr [rbp - 8]; mov rax, qword ptr [rax]; pop rbp; ret; 
0x000000000040310d: mov eax, dword ptr [rbp - 8]; mov rdi, rax; call 0x22b0; nop; leave; ret; 
0x0000000000404811: mov eax, dword ptr [rbp - 8]; mov rdi, rax; call 0x2e76; nop; leave; ret; 
0x0000000000402fb7: mov eax, dword ptr [rbp - 8]; mov rdi, rax; call 0x2f66; nop; leave; ret; 
0x00000000004031a5: mov eax, dword ptr [rbp - 8]; mov rdi, rax; call 0x2fa6; nop; leave; ret; 
0x000000000040305f: mov eax, dword ptr [rbp - 8]; mov rdi, rax; call 0x2fc6; nop; leave; ret; 
0x0000000000402f2b: mov eax, dword ptr [rbp - 8]; mov rdi, rax; call 0x311c; nop; leave; ret; 
0x0000000000402f57: mov eax, dword ptr [rbp - 8]; mov rdi, rax; call 0x312c; nop; leave; ret; 
0x0000000000402f97: mov eax, dword ptr [rbp - 8]; mov rdi, rax; call 0x313c; nop; leave; ret; 
0x0000000000402f77: mov eax, dword ptr [rbp - 8]; mov rdi, rax; call 0x315c; nop; leave; ret; 
0x00000000004059d5: mov eax, dword ptr [rbp - 8]; mov rdi, rax; call 0x317c; nop; leave; ret; 
0x000000000040307f: mov eax, dword ptr [rbp - 8]; mov rdi, rax; call 0x33ba; nop; leave; ret; 
0x000000000040314d: mov eax, dword ptr [rbp - 8]; mov rdi, rax; call 0x35a2; nop; leave; ret; 
0x000000000040316d: mov eax, dword ptr [rbp - 8]; mov rdi, rax; call 0x35c2; nop; leave; ret; 
0x0000000000403593: mov eax, dword ptr [rbp - 8]; mov rdi, rax; call 0x35d2; nop; leave; ret; 
0x00000000004031c5: mov eax, dword ptr [rbp - 8]; mov rdi, rax; call 0x3672; leave; ret; 
0x00000000004032ad: mov eax, dword ptr [rbp - 8]; mov rdi, rax; call 0x3852; leave; ret; 
0x00000000004033d9: mov eax, dword ptr [rbp - 8]; mov rdi, rax; call 0x3b16; nop; leave; ret; 
0x00000000004035b3: mov eax, dword ptr [rbp - 8]; mov rdi, rax; call 0x3daa; nop; leave; ret; 
0x0000000000403b27: mov eax, dword ptr [rbp - 8]; mov rdi, rax; call 0x43b2; nop; leave; ret; 
0x0000000000403f99: mov eax, dword ptr [rbp - 8]; mov rdi, rax; call 0x4782; leave; ret; 
0x0000000000404665: mov eax, dword ptr [rbp - 8]; mov rdi, rax; call 0x4d9e; leave; ret; 
0x0000000000404793: mov eax, dword ptr [rbp - 8]; mov rdi, rax; call 0x4e6c; leave; ret; 
0x0000000000404c89: mov eax, dword ptr [rbp - 8]; mov rdi, rax; call 0x5190; leave; ret; 
0x0000000000404d1b: mov eax, dword ptr [rbp - 8]; mov rdi, rax; call 0x51d3; leave; ret; 
0x0000000000404d3d: mov eax, dword ptr [rbp - 8]; mov rdi, rax; call 0x51f2; nop; leave; ret; 
0x0000000000404d5d: mov eax, dword ptr [rbp - 8]; mov rdi, rax; call 0x5202; nop; leave; ret; 
0x0000000000404e7d: mov eax, dword ptr [rbp - 8]; mov rdi, rax; call 0x534c; leave; ret; 
0x0000000000405119: mov eax, dword ptr [rbp - 8]; mov rdi, rax; call 0x5544; mov rax, qword ptr [rbp - 8]; leave; ret; 
0x00000000004051c6: mov eax, dword ptr [rbp - 8]; mov rdi, rax; call 0x5634; leave; ret; 
0x00000000004051e4: mov eax, dword ptr [rbp - 8]; mov rdi, rax; call 0x5652; leave; ret; 
0x000000000040526f: mov eax, dword ptr [rbp - 8]; mov rdi, rax; call 0x5664; leave; ret; 
0x000000000040528d: mov eax, dword ptr [rbp - 8]; mov rdi, rax; call 0x5676; leave; ret; 
0x0000000000405645: mov eax, dword ptr [rbp - 8]; mov rdi, rax; call 0x57ed; leave; ret; 
0x0000000000405687: mov eax, dword ptr [rbp - 8]; mov rdi, rax; call 0x5800; leave; ret; 
0x00000000004056b7: mov eax, dword ptr [rbp - 8]; mov rdi, rax; call 0x581e; leave; ret; 
0x0000000000405811: mov eax, dword ptr [rbp - 8]; mov rdi, rax; call 0x58b4; leave; ret; 
0x00000000004058d7: mov eax, dword ptr [rbp - 8]; mov rdi, rax; call 0x5973; leave; ret; 
0x0000000000405984: mov eax, dword ptr [rbp - 8]; mov rdi, rax; call 0x5991; leave; ret; 
0x00000000004059a2: mov eax, dword ptr [rbp - 8]; mov rdi, rax; call 0x59af; leave; ret; 
0x0000000000402f0b: mov eax, dword ptr [rbp - 8]; mov rdx, qword ptr [rbp - 0x10]; mov qword ptr [rax + 8], rdx; nop; pop rbp; ret; 
0x00000000004043d5: mov eax, dword ptr [rbp - 8]; mov rdx, qword ptr [rbp - 0x10]; mov qword ptr [rax], rdx; nop; pop rbp; ret; 
0x0000000000403efd: mov eax, dword ptr [rbp - 8]; mov rsi, rcx; mov rdi, rax; call 0x4672; leave; ret; 
0x0000000000404e5b: mov eax, dword ptr [rbp - 8]; mov rsi, rcx; mov rdi, rax; call 0x52ec; leave; ret; 
0x00000000004039d7: mov eax, dword ptr [rbp - 8]; mov rsi, rdx; mov rdi, rax; call 0x3edc; leave; ret; 
0x00000000004043bf: mov eax, dword ptr [rbp - 8]; pop rbp; ret; 
0x0000000000402009: mov eax, dword ptr [rip + 0x7fe1]; test rax, rax; je 0x2016; call rax; 
0x000000000040283a: mov eax, ebx; mov rdi, rax; call 0x24b0; mov rbx, qword ptr [rbp - 8]; leave; ret; 
0x00000000004043a5: mov eax, edi; mov rdi, rax; call 0x4b66; nop; leave; ret; 
0x0000000000402eb2: mov eax, edx; pop rbp; ret; 
0x00000000004025af: mov ebp, esp; call 0x2530; mov byte ptr [rip + 0x7f53], 1; pop rbp; ret; 
0x0000000000402de7: mov ebp, esp; mov esi, 0xffff; mov edi, 1; call 0x2d59; pop rbp; ret; 
0x0000000000403e6d: mov ebp, esp; mov qword ptr [rbp - 8], rdi; cmp qword ptr [rbp - 8], 0; sete al; pop rbp; ret; 
0x0000000000402e68: mov ebp, esp; mov qword ptr [rbp - 8], rdi; mov dword ptr [rbp - 0xc], esi; mov eax, dword ptr [rbp - 0xc]; pop rbp; ret; 
0x000000000040524d: mov ebp, esp; mov qword ptr [rbp - 8], rdi; mov qword ptr [rbp - 0x10], rsi; mov eax, 1; pop rbp; ret; 
0x0000000000402e00: mov ebp, esp; mov qword ptr [rbp - 8], rdi; mov qword ptr [rbp - 0x10], rsi; mov rax, qword ptr [rbp - 0x10]; pop rbp; ret; 
0x0000000000402e16: mov ebp, esp; mov qword ptr [rbp - 8], rdi; mov qword ptr [rbp - 0x10], rsi; nop; pop rbp; ret; 
0x0000000000403dc0: mov ebp, esp; mov qword ptr [rbp - 8], rdi; mov rax, qword ptr [rbp - 8]; mov rax, qword ptr [rax + 0x10]; pop rbp; ret; 
0x0000000000403678: mov ebp, esp; mov qword ptr [rbp - 8], rdi; mov rax, qword ptr [rbp - 8]; mov rax, qword ptr [rax + 0x18]; pop rbp; ret; 
0x0000000000402eea: mov ebp, esp; mov qword ptr [rbp - 8], rdi; mov rax, qword ptr [rbp - 8]; mov rax, qword ptr [rax + 8]; pop rbp; ret; 
0x0000000000404530: mov ebp, esp; mov qword ptr [rbp - 8], rdi; mov rax, qword ptr [rbp - 8]; mov rax, qword ptr [rax]; pop rbp; ret; 
0x00000000004043b8: mov ebp, esp; mov qword ptr [rbp - 8], rdi; mov rax, qword ptr [rbp - 8]; pop rbp; ret; 
0x00000000004058fc: mov ebp, esp; mov qword ptr [rbp - 8], rdi; movabs rax, 0xfffffffffffffff; pop rbp; ret; 
0x0000000000403122: mov ebp, esp; mov qword ptr [rbp - 8], rdi; nop; pop rbp; ret; 
0x0000000000403e83: mov ebp, esp; mov qword ptr [rbp - 8], rdi; pop rbp; ret; 
0x0000000000402845: mov ebx, dword ptr [rbp - 8]; leave; ret; 
0x0000000000405407: mov ecx, 0x90000002; leave; ret; 
0x0000000000402547: mov edi, 0x40a160; jmp rax; 
0x00000000004053dd: mov edi, 0x90ffffcf; leave; ret; 
0x00000000004054ed: mov edi, 0xc9ffffce; ret; 
0x0000000000402dee: mov edi, 1; call 0x2d59; pop rbp; ret; 
0x0000000000404405: mov edi, 1; call 0x2dfa; nop; leave; ret; 
0x0000000000403111: mov edi, eax; call 0x22b0; nop; leave; ret; 
0x0000000000402e57: mov edi, eax; call 0x22e0; nop; leave; ret; 
0x0000000000402dd7: mov edi, eax; call 0x2370; nop; leave; ret; 
0x00000000004053da: mov edi, eax; call 0x23a0; nop; leave; ret; 
0x000000000040523e: mov edi, eax; call 0x23b0; leave; ret; 
0x000000000040283d: mov edi, eax; call 0x24b0; mov rbx, qword ptr [rbp - 8]; leave; ret; 
0x0000000000404815: mov edi, eax; call 0x2e76; nop; leave; ret; 
0x000000000040469a: mov edi, eax; call 0x2e90; leave; ret; 
0x0000000000402fbb: mov edi, eax; call 0x2f66; nop; leave; ret; 
0x00000000004031a9: mov edi, eax; call 0x2fa6; nop; leave; ret; 
0x0000000000403063: mov edi, eax; call 0x2fc6; nop; leave; ret; 
0x0000000000402f2f: mov edi, eax; call 0x311c; nop; leave; ret; 
0x0000000000402f5b: mov edi, eax; call 0x312c; nop; leave; ret; 
0x0000000000402f9b: mov edi, eax; call 0x313c; nop; leave; ret; 
0x0000000000402f7b: mov edi, eax; call 0x315c; nop; leave; ret; 
0x00000000004059d9: mov edi, eax; call 0x317c; nop; leave; ret; 
0x0000000000403083: mov edi, eax; call 0x33ba; nop; leave; ret; 
0x0000000000403151: mov edi, eax; call 0x35a2; nop; leave; ret; 
0x0000000000403171: mov edi, eax; call 0x35c2; nop; leave; ret; 
0x0000000000403597: mov edi, eax; call 0x35d2; nop; leave; ret; 
0x00000000004031c9: mov edi, eax; call 0x3672; leave; ret; 
0x0000000000403292: mov edi, eax; call 0x37e0; leave; ret; 
0x00000000004032b1: mov edi, eax; call 0x3852; leave; ret; 
0x0000000000403300: mov edi, eax; call 0x387a; leave; ret; 
0x0000000000403350: mov edi, eax; call 0x39ac; leave; ret; 
0x000000000040337a: mov edi, eax; call 0x3a08; leave; ret; 
0x00000000004033ac: mov edi, eax; call 0x3ab8; mov rax, qword ptr [rbp - 8]; leave; ret; 
0x00000000004033dd: mov edi, eax; call 0x3b16; nop; leave; ret; 
0x0000000000403410: mov edi, eax; call 0x3b36; mov rax, qword ptr [rbp - 8]; leave; ret; 
0x000000000040343e: mov edi, eax; call 0x3b7c; nop; leave; ret; 
0x0000000000403c40: mov edi, eax; call 0x3bf6; mov rax, qword ptr [rbp - 8]; leave; ret; 
0x00000000004035b7: mov edi, eax; call 0x3daa; nop; leave; ret; 
0x0000000000403667: mov edi, eax; call 0x3e1c; nop; leave; ret; 
0x00000000004036b4: mov edi, eax; call 0x3e8b; leave; ret; 
0x00000000004039de: mov edi, eax; call 0x3edc; leave; ret; 
0x0000000000404182: mov edi, eax; call 0x3f5e; mov rax, qword ptr [rbp - 0x10]; leave; ret; 
0x0000000000403845: mov edi, eax; call 0x3f5e; mov rax, qword ptr [rbp - 0x18]; leave; ret; 
0x000000000040386c: mov edi, eax; call 0x3f5e; mov rax, qword ptr [rbp - 8]; leave; ret; 
0x00000000004055f8: mov edi, eax; call 0x3f88; leave; ret; 
0x0000000000403b05: mov edi, eax; call 0x4370; mov rax, qword ptr [rbp - 0x18]; mov rbx, qword ptr [rbp - 8]; leave; ret; 
0x0000000000403b6e: mov edi, eax; call 0x4370; mov rax, qword ptr [rbp - 8]; leave; ret; 
0x0000000000403b2b: mov edi, eax; call 0x43b2; nop; leave; ret; 
0x0000000000403f7e: mov edi, eax; call 0x43c4; nop; leave; ret; 
0x0000000000403beb: mov edi, eax; call 0x43e2; nop; leave; ret; 
0x0000000000404084: mov edi, eax; call 0x4540; nop; leave; ret; 
0x0000000000403f04: mov edi, eax; call 0x4672; leave; ret; 
0x0000000000403f9d: mov edi, eax; call 0x4782; leave; ret; 
0x0000000000403fc6: mov edi, eax; call 0x47a0; nop; leave; ret; 
0x0000000000404203: mov edi, eax; call 0x4aca; mov rax, qword ptr [rbp - 0x18]; mov rbx, qword ptr [rbp - 8]; leave; ret; 
0x000000000040424c: mov edi, eax; call 0x4aca; mov rax, qword ptr [rbp - 8]; leave; ret; 
0x00000000004043a8: mov edi, eax; call 0x4b66; nop; leave; ret; 
0x000000000040458b: mov edi, eax; call 0x4cc0; nop; mov rbx, qword ptr [rbp - 8]; leave; ret; 
0x0000000000404669: mov edi, eax; call 0x4d9e; leave; ret; 
0x0000000000404797: mov edi, eax; call 0x4e6c; leave; ret; 
0x0000000000404c8d: mov edi, eax; call 0x5190; leave; ret; 
0x0000000000404cb6: mov edi, eax; call 0x51a2; nop; leave; ret; 
0x0000000000404d1f: mov edi, eax; call 0x51d3; leave; ret; 
0x0000000000404d41: mov edi, eax; call 0x51f2; nop; leave; ret; 
0x0000000000404d61: mov edi, eax; call 0x5202; nop; leave; ret; 
0x0000000000404d93: mov edi, eax; call 0x5212; nop; leave; ret; 
0x0000000000404e62: mov edi, eax; call 0x52ec; leave; ret; 
0x0000000000404e81: mov edi, eax; call 0x534c; leave; ret; 
0x0000000000404ecd: mov edi, eax; call 0x5376; leave; ret; 
0x0000000000404f80: mov edi, eax; call 0x54b6; nop; leave; ret; 
0x000000000040511d: mov edi, eax; call 0x5544; mov rax, qword ptr [rbp - 8]; leave; ret; 
0x00000000004051ca: mov edi, eax; call 0x5634; leave; ret; 
0x00000000004051e8: mov edi, eax; call 0x5652; leave; ret; 
0x0000000000405273: mov edi, eax; call 0x5664; leave; ret; 
0x0000000000405291: mov edi, eax; call 0x5676; leave; ret; 
0x00000000004052b3: mov edi, eax; call 0x5694; mov rdi, rax; call 0x56a6; leave; ret; 
0x00000000004052bb: mov edi, eax; call 0x56a6; leave; ret; 
0x0000000000405404: mov edi, eax; call 0x56c4; nop; leave; ret; 
0x000000000040553a: mov edi, eax; call 0x5714; nop; leave; ret; 
0x0000000000405649: mov edi, eax; call 0x57ed; leave; ret; 
0x000000000040568b: mov edi, eax; call 0x5800; leave; ret; 
0x00000000004056bb: mov edi, eax; call 0x581e; leave; ret; 
0x000000000040570a: mov edi, eax; call 0x5830; nop; leave; ret; 
0x0000000000405815: mov edi, eax; call 0x58b4; leave; ret; 
0x0000000000405898: mov edi, eax; call 0x590e; leave; ret; 
0x00000000004058db: mov edi, eax; call 0x5973; leave; ret; 
0x0000000000405988: mov edi, eax; call 0x5991; leave; ret; 
0x00000000004059a6: mov edi, eax; call 0x59af; leave; ret; 
0x0000000000404d00: mov edi, ecx; call 0x4f58; nop; leave; ret; 
0x0000000000403ed2: mov edi, edx; call 0x2e62; leave; ret; 
0x0000000000402ea8: mov edx, 0; div qword ptr [rbp - 0x18]; mov rax, rdx; pop rbp; ret; 
0x0000000000405189: mov edx, 0xe8458b48; leave; ret; 
0x0000000000402f0f: mov edx, dword ptr [rbp - 0x10]; mov qword ptr [rax + 8], rdx; nop; pop rbp; ret; 
0x00000000004043d9: mov edx, dword ptr [rbp - 0x10]; mov qword ptr [rax], rdx; nop; pop rbp; ret; 
0x00000000004056d9: mov edx, dword ptr [rbp - 0x10]; mov rdx, qword ptr [rdx]; mov qword ptr [rax], rdx; nop; pop rbp; ret; 
0x000000000040328b: mov edx, dword ptr [rbp - 0x10]; mov rsi, rdx; mov rdi, rax; call 0x37e0; leave; ret; 
0x00000000004032f9: mov edx, dword ptr [rbp - 0x10]; mov rsi, rdx; mov rdi, rax; call 0x387a; leave; ret; 
0x0000000000403349: mov edx, dword ptr [rbp - 0x10]; mov rsi, rdx; mov rdi, rax; call 0x39ac; leave; ret; 
0x0000000000403373: mov edx, dword ptr [rbp - 0x10]; mov rsi, rdx; mov rdi, rax; call 0x3a08; leave; ret; 
0x00000000004036ad: mov edx, dword ptr [rbp - 0x10]; mov rsi, rdx; mov rdi, rax; call 0x3e8b; leave; ret; 
0x00000000004050fe: mov edx, dword ptr [rbp - 0x18]; mov qword ptr [rax], rdx; nop; leave; ret; 
0x00000000004057e4: mov edx, dword ptr [rbp - 8]; mov qword ptr [rdx], rax; nop; leave; ret; 
0x00000000004056dd: mov edx, dword ptr [rdx]; mov qword ptr [rax], rdx; nop; pop rbp; ret; 
0x0000000000402de9: mov esi, 0xffff; mov edi, 1; call 0x2d59; pop rbp; ret; 
0x0000000000404403: mov esi, eax; mov edi, 1; call 0x2dfa; nop; leave; ret; 
0x0000000000404cfd: mov esi, eax; mov rdi, rcx; call 0x4f58; nop; leave; ret; 
0x0000000000403ecf: mov esi, eax; mov rdi, rdx; call 0x2e62; leave; ret; 
0x0000000000404697: mov esi, ecx; mov rdi, rax; call 0x2e90; leave; ret; 
0x00000000004033a9: mov esi, ecx; mov rdi, rax; call 0x3ab8; mov rax, qword ptr [rbp - 8]; leave; ret; 
0x000000000040340d: mov esi, ecx; mov rdi, rax; call 0x3b36; mov rax, qword ptr [rbp - 8]; leave; ret; 
0x0000000000403664: mov esi, ecx; mov rdi, rax; call 0x3e1c; nop; leave; ret; 
0x0000000000403f01: mov esi, ecx; mov rdi, rax; call 0x4672; leave; ret; 
0x0000000000404d90: mov esi, ecx; mov rdi, rax; call 0x5212; nop; leave; ret; 
0x0000000000404e5f: mov esi, ecx; mov rdi, rax; call 0x52ec; leave; ret; 
0x0000000000404eca: mov esi, ecx; mov rdi, rax; call 0x5376; leave; ret; 
0x0000000000404f7d: mov esi, ecx; mov rdi, rax; call 0x54b6; nop; leave; ret; 
0x0000000000405707: mov esi, ecx; mov rdi, rax; call 0x5830; nop; leave; ret; 
0x0000000000405895: mov esi, ecx; mov rdi, rax; call 0x590e; leave; ret; 
0x000000000040523b: mov esi, edx; mov rdi, rax; call 0x23b0; leave; ret; 
0x000000000040328f: mov esi, edx; mov rdi, rax; call 0x37e0; leave; ret; 
0x00000000004032fd: mov esi, edx; mov rdi, rax; call 0x387a; leave; ret; 
0x000000000040334d: mov esi, edx; mov rdi, rax; call 0x39ac; leave; ret; 
0x0000000000403377: mov esi, edx; mov rdi, rax; call 0x3a08; leave; ret; 
0x000000000040343b: mov esi, edx; mov rdi, rax; call 0x3b7c; nop; leave; ret; 
0x0000000000403c3d: mov esi, edx; mov rdi, rax; call 0x3bf6; mov rax, qword ptr [rbp - 8]; leave; ret; 
0x00000000004036b1: mov esi, edx; mov rdi, rax; call 0x3e8b; leave; ret; 
0x00000000004039db: mov esi, edx; mov rdi, rax; call 0x3edc; leave; ret; 
0x000000000040417f: mov esi, edx; mov rdi, rax; call 0x3f5e; mov rax, qword ptr [rbp - 0x10]; leave; ret; 
0x0000000000403842: mov esi, edx; mov rdi, rax; call 0x3f5e; mov rax, qword ptr [rbp - 0x18]; leave; ret; 
0x0000000000403f7b: mov esi, edx; mov rdi, rax; call 0x43c4; nop; leave; ret; 
0x0000000000403be8: mov esi, edx; mov rdi, rax; call 0x43e2; nop; leave; ret; 
0x0000000000404081: mov esi, edx; mov rdi, rax; call 0x4540; nop; leave; ret; 
0x0000000000403fc3: mov esi, edx; mov rdi, rax; call 0x47a0; nop; leave; ret; 
0x0000000000404cb3: mov esi, edx; mov rdi, rax; call 0x51a2; nop; leave; ret; 
0x0000000000405401: mov esi, edx; mov rdi, rax; call 0x56c4; nop; leave; ret; 
0x0000000000405537: mov esi, edx; mov rdi, rax; call 0x5714; nop; leave; ret; 
0x0000000000403634: mov qword ptr [rax + 0x10], 0; nop; leave; ret; 
0x0000000000403043: mov qword ptr [rax + 0x30], 0; nop; leave; ret; 
0x0000000000405868: mov qword ptr [rax + 8], 0; nop; leave; ret; 
0x0000000000402ed8: mov qword ptr [rax + 8], 0; nop; pop rbp; ret; 
0x000000000040562a: mov qword ptr [rax + 8], rdx; mov rax, qword ptr [rbp - 8]; pop rbp; ret; 
0x0000000000402f12: mov qword ptr [rax + 8], rdx; nop; pop rbp; ret; 
0x00000000004055af: mov qword ptr [rax], 0; nop; leave; ret; 
0x0000000000402e86: mov qword ptr [rax], 0; nop; pop rbp; ret; 
0x0000000000405101: mov qword ptr [rax], rdx; nop; leave; ret; 
0x00000000004043dc: mov qword ptr [rax], rdx; nop; pop rbp; ret; 
0x0000000000405253: mov qword ptr [rbp - 0x10], rsi; mov eax, 1; pop rbp; ret; 
0x00000000004049ca: mov qword ptr [rbp - 0x10], rsi; mov qword ptr [rbp - 0x18], rdx; nop; pop rbp; ret; 
0x0000000000402e06: mov qword ptr [rbp - 0x10], rsi; mov rax, qword ptr [rbp - 0x10]; pop rbp; ret; 
0x0000000000403e97: mov qword ptr [rbp - 0x10], rsi; mov rax, qword ptr [rbp - 0x10]; sub rax, qword ptr [rbp - 8]; pop rbp; ret; 
0x0000000000402e1c: mov qword ptr [rbp - 0x10], rsi; nop; pop rbp; ret; 
0x00000000004049ce: mov qword ptr [rbp - 0x18], rdx; nop; pop rbp; ret; 
0x0000000000403e6f: mov qword ptr [rbp - 8], rdi; cmp qword ptr [rbp - 8], 0; sete al; pop rbp; ret; 
0x0000000000402e6a: mov qword ptr [rbp - 8], rdi; mov dword ptr [rbp - 0xc], esi; mov eax, dword ptr [rbp - 0xc]; pop rbp; ret; 
0x000000000040524f: mov qword ptr [rbp - 8], rdi; mov qword ptr [rbp - 0x10], rsi; mov eax, 1; pop rbp; ret; 
0x00000000004049c6: mov qword ptr [rbp - 8], rdi; mov qword ptr [rbp - 0x10], rsi; mov qword ptr [rbp - 0x18], rdx; nop; pop rbp; ret; 
0x0000000000402e02: mov qword ptr [rbp - 8], rdi; mov qword ptr [rbp - 0x10], rsi; mov rax, qword ptr [rbp - 0x10]; pop rbp; ret; 
0x0000000000403e93: mov qword ptr [rbp - 8], rdi; mov qword ptr [rbp - 0x10], rsi; mov rax, qword ptr [rbp - 0x10]; sub rax, qword ptr [rbp - 8]; pop rbp; ret; 
0x0000000000402e18: mov qword ptr [rbp - 8], rdi; mov qword ptr [rbp - 0x10], rsi; nop; pop rbp; ret; 
0x0000000000402e7e: mov qword ptr [rbp - 8], rdi; mov rax, qword ptr [rbp - 8]; mov qword ptr [rax], 0; nop; pop rbp; ret; 
0x0000000000403dc2: mov qword ptr [rbp - 8], rdi; mov rax, qword ptr [rbp - 8]; mov rax, qword ptr [rax + 0x10]; pop rbp; ret; 
0x000000000040367a: mov qword ptr [rbp - 8], rdi; mov rax, qword ptr [rbp - 8]; mov rax, qword ptr [rax + 0x18]; pop rbp; ret; 
0x0000000000402eec: mov qword ptr [rbp - 8], rdi; mov rax, qword ptr [rbp - 8]; mov rax, qword ptr [rax + 8]; pop rbp; ret; 
0x0000000000404532: mov qword ptr [rbp - 8], rdi; mov rax, qword ptr [rbp - 8]; mov rax, qword ptr [rax]; pop rbp; ret; 
0x00000000004031c0: mov qword ptr [rbp - 8], rdi; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x3672; leave; ret; 
0x00000000004032a8: mov qword ptr [rbp - 8], rdi; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x3852; leave; ret; 
0x0000000000403f94: mov qword ptr [rbp - 8], rdi; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x4782; leave; ret; 
0x0000000000404660: mov qword ptr [rbp - 8], rdi; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x4d9e; leave; ret; 
0x000000000040478e: mov qword ptr [rbp - 8], rdi; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x4e6c; leave; ret; 
0x0000000000404c84: mov qword ptr [rbp - 8], rdi; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x5190; leave; ret; 
0x0000000000404d16: mov qword ptr [rbp - 8], rdi; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x51d3; leave; ret; 
0x0000000000404e78: mov qword ptr [rbp - 8], rdi; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x534c; leave; ret; 
0x00000000004051c1: mov qword ptr [rbp - 8], rdi; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x5634; leave; ret; 
0x00000000004051df: mov qword ptr [rbp - 8], rdi; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x5652; leave; ret; 
0x000000000040526a: mov qword ptr [rbp - 8], rdi; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x5664; leave; ret; 
0x0000000000405288: mov qword ptr [rbp - 8], rdi; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x5676; leave; ret; 
0x0000000000405640: mov qword ptr [rbp - 8], rdi; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x57ed; leave; ret; 
0x0000000000405682: mov qword ptr [rbp - 8], rdi; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x5800; leave; ret; 
0x00000000004056b2: mov qword ptr [rbp - 8], rdi; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x581e; leave; ret; 
0x000000000040580c: mov qword ptr [rbp - 8], rdi; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x58b4; leave; ret; 
0x00000000004058d2: mov qword ptr [rbp - 8], rdi; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x5973; leave; ret; 
0x000000000040597f: mov qword ptr [rbp - 8], rdi; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x5991; leave; ret; 
0x000000000040599d: mov qword ptr [rbp - 8], rdi; mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x59af; leave; ret; 
0x00000000004043ba: mov qword ptr [rbp - 8], rdi; mov rax, qword ptr [rbp - 8]; pop rbp; ret; 
0x00000000004058fe: mov qword ptr [rbp - 8], rdi; movabs rax, 0xfffffffffffffff; pop rbp; ret; 
0x0000000000403124: mov qword ptr [rbp - 8], rdi; nop; pop rbp; ret; 
0x0000000000403e85: mov qword ptr [rbp - 8], rdi; pop rbp; ret; 
0x00000000004057e7: mov qword ptr [rdx], rax; nop; leave; ret; 
0x00000000004043a4: mov r8, rdi; mov rdi, rax; call 0x4b66; nop; leave; ret; 
0x0000000000403dca: mov rax, qword ptr [rax + 0x10]; pop rbp; ret; 
0x0000000000403682: mov rax, qword ptr [rax + 0x18]; pop rbp; ret; 
0x0000000000402ef4: mov rax, qword ptr [rax + 8]; pop rbp; ret; 
0x00000000004055f0: mov rax, qword ptr [rax]; add rax, 8; mov rdi, rax; call 0x3f88; leave; ret; 
0x00000000004041a4: mov rax, qword ptr [rax]; add rax, 8; mov rdi, rax; call 0x4782; leave; ret; 
0x0000000000403324: mov rax, qword ptr [rax]; cmp rdx, rax; sete al; pop rbp; ret; 
0x00000000004032d5: mov rax, qword ptr [rax]; cmp rdx, rax; setne al; pop rbp; ret; 
0x000000000040453a: mov rax, qword ptr [rax]; pop rbp; ret; 
0x0000000000404189: mov rax, qword ptr [rbp - 0x10]; leave; ret; 
0x0000000000402ea4: mov rax, qword ptr [rbp - 0x10]; mov edx, 0; div qword ptr [rbp - 0x18]; mov rax, rdx; pop rbp; ret; 
0x0000000000403320: mov rax, qword ptr [rbp - 0x10]; mov rax, qword ptr [rax]; cmp rdx, rax; sete al; pop rbp; ret; 
0x00000000004032d1: mov rax, qword ptr [rbp - 0x10]; mov rax, qword ptr [rax]; cmp rdx, rax; setne al; pop rbp; ret; 
0x0000000000405236: mov rax, qword ptr [rbp - 0x10]; mov rsi, rdx; mov rdi, rax; call 0x23b0; leave; ret; 
0x00000000004030a4: mov rax, qword ptr [rbp - 0x10]; movzx eax, byte ptr [rax]; cmp dl, al; sete al; pop rbp; ret; 
0x0000000000402e0a: mov rax, qword ptr [rbp - 0x10]; pop rbp; ret; 
0x0000000000403e9b: mov rax, qword ptr [rbp - 0x10]; sub rax, qword ptr [rbp - 8]; pop rbp; ret; 
0x000000000040384c: mov rax, qword ptr [rbp - 0x18]; leave; ret; 
0x00000000004052de: mov rax, qword ptr [rbp - 0x18]; mov eax, dword ptr [rax]; cmp edx, eax; sete al; pop rbp; ret; 
0x00000000004055ab: mov rax, qword ptr [rbp - 0x18]; mov qword ptr [rax], 0; nop; leave; ret; 
0x0000000000403b0c: mov rax, qword ptr [rbp - 0x18]; mov rbx, qword ptr [rbp - 8]; leave; ret; 
0x0000000000402e52: mov rax, qword ptr [rbp - 0x18]; mov rdi, rax; call 0x22e0; nop; leave; ret; 
0x00000000004050f9: mov rax, qword ptr [rbp - 0x38]; mov rdx, qword ptr [rbp - 0x18]; mov qword ptr [rax], rdx; nop; leave; ret; 
0x00000000004030f6: mov rax, qword ptr [rbp - 8]; leave; ret; 
0x0000000000403630: mov rax, qword ptr [rbp - 8]; mov qword ptr [rax + 0x10], 0; nop; leave; ret; 
0x000000000040303f: mov rax, qword ptr [rbp - 8]; mov qword ptr [rax + 0x30], 0; nop; leave; ret; 
0x0000000000405864: mov rax, qword ptr [rbp - 8]; mov qword ptr [rax + 8], 0; nop; leave; ret; 
0x0000000000402ed4: mov rax, qword ptr [rbp - 8]; mov qword ptr [rax + 8], 0; nop; pop rbp; ret; 
0x0000000000405626: mov rax, qword ptr [rbp - 8]; mov qword ptr [rax + 8], rdx; mov rax, qword ptr [rbp - 8]; pop rbp; ret; 
0x0000000000402e82: mov rax, qword ptr [rbp - 8]; mov qword ptr [rax], 0; nop; pop rbp; ret; 
0x0000000000403dc6: mov rax, qword ptr [rbp - 8]; mov rax, qword ptr [rax + 0x10]; pop rbp; ret; 
0x000000000040367e: mov rax, qword ptr [rbp - 8]; mov rax, qword ptr [rax + 0x18]; pop rbp; ret; 
0x0000000000402ef0: mov rax, qword ptr [rbp - 8]; mov rax, qword ptr [rax + 8]; pop rbp; ret; 
0x0000000000404536: mov rax, qword ptr [rbp - 8]; mov rax, qword ptr [rax]; pop rbp; ret; 
0x000000000040310c: mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x22b0; nop; leave; ret; 
0x0000000000404810: mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x2e76; nop; leave; ret; 
0x0000000000402fb6: mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x2f66; nop; leave; ret; 
0x00000000004031a4: mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x2fa6; nop; leave; ret; 
0x000000000040305e: mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x2fc6; nop; leave; ret; 
0x0000000000402f2a: mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x311c; nop; leave; ret; 
0x0000000000402f56: mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x312c; nop; leave; ret; 
0x0000000000402f96: mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x313c; nop; leave; ret; 
0x0000000000402f76: mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x315c; nop; leave; ret; 
0x00000000004059d4: mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x317c; nop; leave; ret; 
0x000000000040307e: mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x33ba; nop; leave; ret; 
0x000000000040314c: mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x35a2; nop; leave; ret; 
0x000000000040316c: mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x35c2; nop; leave; ret; 
0x0000000000403592: mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x35d2; nop; leave; ret; 
0x00000000004031c4: mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x3672; leave; ret; 
0x00000000004032ac: mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x3852; leave; ret; 
0x00000000004033d8: mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x3b16; nop; leave; ret; 
0x00000000004035b2: mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x3daa; nop; leave; ret; 
0x0000000000403b26: mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x43b2; nop; leave; ret; 
0x0000000000403f98: mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x4782; leave; ret; 
0x0000000000404664: mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x4d9e; leave; ret; 
0x0000000000404792: mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x4e6c; leave; ret; 
0x0000000000404c88: mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x5190; leave; ret; 
0x0000000000404d1a: mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x51d3; leave; ret; 
0x0000000000404d3c: mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x51f2; nop; leave; ret; 
0x0000000000404d5c: mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x5202; nop; leave; ret; 
0x0000000000404e7c: mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x534c; leave; ret; 
0x0000000000405118: mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x5544; mov rax, qword ptr [rbp - 8]; leave; ret; 
0x00000000004051c5: mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x5634; leave; ret; 
0x00000000004051e3: mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x5652; leave; ret; 
0x000000000040526e: mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x5664; leave; ret; 
0x000000000040528c: mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x5676; leave; ret; 
0x0000000000405644: mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x57ed; leave; ret; 
0x0000000000405686: mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x5800; leave; ret; 
0x00000000004056b6: mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x581e; leave; ret; 
0x0000000000405810: mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x58b4; leave; ret; 
0x00000000004058d6: mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x5973; leave; ret; 
0x0000000000405983: mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x5991; leave; ret; 
0x00000000004059a1: mov rax, qword ptr [rbp - 8]; mov rdi, rax; call 0x59af; leave; ret; 
0x0000000000402f0a: mov rax, qword ptr [rbp - 8]; mov rdx, qword ptr [rbp - 0x10]; mov qword ptr [rax + 8], rdx; nop; pop rbp; ret; 
0x00000000004043d4: mov rax, qword ptr [rbp - 8]; mov rdx, qword ptr [rbp - 0x10]; mov qword ptr [rax], rdx; nop; pop rbp; ret; 
0x0000000000403efc: mov rax, qword ptr [rbp - 8]; mov rsi, rcx; mov rdi, rax; call 0x4672; leave; ret; 
0x0000000000404e5a: mov rax, qword ptr [rbp - 8]; mov rsi, rcx; mov rdi, rax; call 0x52ec; leave; ret; 
0x00000000004039d6: mov rax, qword ptr [rbp - 8]; mov rsi, rdx; mov rdi, rax; call 0x3edc; leave; ret; 
0x00000000004043be: mov rax, qword ptr [rbp - 8]; pop rbp; ret; 
0x0000000000402008: mov rax, qword ptr [rip + 0x7fe1]; test rax, rax; je 0x2016; call rax; 
0x0000000000402839: mov rax, rbx; mov rdi, rax; call 0x24b0; mov rbx, qword ptr [rbp - 8]; leave; ret; 
0x0000000000402eb1: mov rax, rdx; pop rbp; ret; 
0x00000000004025ae: mov rbp, rsp; call 0x2530; mov byte ptr [rip + 0x7f53], 1; pop rbp; ret; 
0x0000000000402de6: mov rbp, rsp; mov esi, 0xffff; mov edi, 1; call 0x2d59; pop rbp; ret; 
0x0000000000403e6c: mov rbp, rsp; mov qword ptr [rbp - 8], rdi; cmp qword ptr [rbp - 8], 0; sete al; pop rbp; ret; 
0x0000000000402e67: mov rbp, rsp; mov qword ptr [rbp - 8], rdi; mov dword ptr [rbp - 0xc], esi; mov eax, dword ptr [rbp - 0xc]; pop rbp; ret; 
0x000000000040524c: mov rbp, rsp; mov qword ptr [rbp - 8], rdi; mov qword ptr [rbp - 0x10], rsi; mov eax, 1; pop rbp; ret; 
0x0000000000402dff: mov rbp, rsp; mov qword ptr [rbp - 8], rdi; mov qword ptr [rbp - 0x10], rsi; mov rax, qword ptr [rbp - 0x10]; pop rbp; ret; 
0x0000000000402e15: mov rbp, rsp; mov qword ptr [rbp - 8], rdi; mov qword ptr [rbp - 0x10], rsi; nop; pop rbp; ret; 
0x0000000000403dbf: mov rbp, rsp; mov qword ptr [rbp - 8], rdi; mov rax, qword ptr [rbp - 8]; mov rax, qword ptr [rax + 0x10]; pop rbp; ret; 
0x0000000000403677: mov rbp, rsp; mov qword ptr [rbp - 8], rdi; mov rax, qword ptr [rbp - 8]; mov rax, qword ptr [rax + 0x18]; pop rbp; ret; 
0x0000000000402ee9: mov rbp, rsp; mov qword ptr [rbp - 8], rdi; mov rax, qword ptr [rbp - 8]; mov rax, qword ptr [rax + 8]; pop rbp; ret; 
0x000000000040452f: mov rbp, rsp; mov qword ptr [rbp - 8], rdi; mov rax, qword ptr [rbp - 8]; mov rax, qword ptr [rax]; pop rbp; ret; 
0x00000000004043b7: mov rbp, rsp; mov qword ptr [rbp - 8], rdi; mov rax, qword ptr [rbp - 8]; pop rbp; ret; 
0x00000000004058fb: mov rbp, rsp; mov qword ptr [rbp - 8], rdi; movabs rax, 0xfffffffffffffff; pop rbp; ret; 
0x0000000000403121: mov rbp, rsp; mov qword ptr [rbp - 8], rdi; nop; pop rbp; ret; 
0x0000000000403e82: mov rbp, rsp; mov qword ptr [rbp - 8], rdi; pop rbp; ret; 
0x0000000000402844: mov rbx, qword ptr [rbp - 8]; leave; ret; 
0x0000000000403110: mov rdi, rax; call 0x22b0; nop; leave; ret; 
0x0000000000402e56: mov rdi, rax; call 0x22e0; nop; leave; ret; 
0x0000000000402dd6: mov rdi, rax; call 0x2370; nop; leave; ret; 
0x00000000004053d9: mov rdi, rax; call 0x23a0; nop; leave; ret; 
0x000000000040523d: mov rdi, rax; call 0x23b0; leave; ret; 
0x000000000040283c: mov rdi, rax; call 0x24b0; mov rbx, qword ptr [rbp - 8]; leave; ret; 
0x0000000000404814: mov rdi, rax; call 0x2e76; nop; leave; ret; 
0x0000000000404699: mov rdi, rax; call 0x2e90; leave; ret; 
0x0000000000402fba: mov rdi, rax; call 0x2f66; nop; leave; ret; 
0x00000000004031a8: mov rdi, rax; call 0x2fa6; nop; leave; ret; 
0x0000000000403062: mov rdi, rax; call 0x2fc6; nop; leave; ret; 
0x0000000000402f2e: mov rdi, rax; call 0x311c; nop; leave; ret; 
0x0000000000402f5a: mov rdi, rax; call 0x312c; nop; leave; ret; 
0x0000000000402f9a: mov rdi, rax; call 0x313c; nop; leave; ret; 
0x0000000000402f7a: mov rdi, rax; call 0x315c; nop; leave; ret; 
0x00000000004059d8: mov rdi, rax; call 0x317c; nop; leave; ret; 
0x0000000000403082: mov rdi, rax; call 0x33ba; nop; leave; ret; 
0x0000000000403150: mov rdi, rax; call 0x35a2; nop; leave; ret; 
0x0000000000403170: mov rdi, rax; call 0x35c2; nop; leave; ret; 
0x0000000000403596: mov rdi, rax; call 0x35d2; nop; leave; ret; 
0x00000000004031c8: mov rdi, rax; call 0x3672; leave; ret; 
0x0000000000403291: mov rdi, rax; call 0x37e0; leave; ret; 
0x00000000004032b0: mov rdi, rax; call 0x3852; leave; ret; 
0x00000000004032ff: mov rdi, rax; call 0x387a; leave; ret; 
0x000000000040334f: mov rdi, rax; call 0x39ac; leave; ret; 
0x0000000000403379: mov rdi, rax; call 0x3a08; leave; ret; 
0x00000000004033ab: mov rdi, rax; call 0x3ab8; mov rax, qword ptr [rbp - 8]; leave; ret; 
0x00000000004033dc: mov rdi, rax; call 0x3b16; nop; leave; ret; 
0x000000000040340f: mov rdi, rax; call 0x3b36; mov rax, qword ptr [rbp - 8]; leave; ret; 
0x000000000040343d: mov rdi, rax; call 0x3b7c; nop; leave; ret; 
0x0000000000403c3f: mov rdi, rax; call 0x3bf6; mov rax, qword ptr [rbp - 8]; leave; ret; 
0x00000000004035b6: mov rdi, rax; call 0x3daa; nop; leave; ret; 
0x0000000000403666: mov rdi, rax; call 0x3e1c; nop; leave; ret; 
0x00000000004036b3: mov rdi, rax; call 0x3e8b; leave; ret; 
0x00000000004039dd: mov rdi, rax; call 0x3edc; leave; ret; 
0x0000000000404181: mov rdi, rax; call 0x3f5e; mov rax, qword ptr [rbp - 0x10]; leave; ret; 
0x0000000000403844: mov rdi, rax; call 0x3f5e; mov rax, qword ptr [rbp - 0x18]; leave; ret; 
0x000000000040386b: mov rdi, rax; call 0x3f5e; mov rax, qword ptr [rbp - 8]; leave; ret; 
0x00000000004055f7: mov rdi, rax; call 0x3f88; leave; ret; 
0x0000000000403b04: mov rdi, rax; call 0x4370; mov rax, qword ptr [rbp - 0x18]; mov rbx, qword ptr [rbp - 8]; leave; ret; 
0x0000000000403b6d: mov rdi, rax; call 0x4370; mov rax, qword ptr [rbp - 8]; leave; ret; 
0x0000000000403b2a: mov rdi, rax; call 0x43b2; nop; leave; ret; 
0x0000000000403f7d: mov rdi, rax; call 0x43c4; nop; leave; ret; 
0x0000000000403bea: mov rdi, rax; call 0x43e2; nop; leave; ret; 
0x0000000000404083: mov rdi, rax; call 0x4540; nop; leave; ret; 
0x0000000000403f03: mov rdi, rax; call 0x4672; leave; ret; 
0x0000000000403f9c: mov rdi, rax; call 0x4782; leave; ret; 
0x0000000000403fc5: mov rdi, rax; call 0x47a0; nop; leave; ret; 
0x0000000000404202: mov rdi, rax; call 0x4aca; mov rax, qword ptr [rbp - 0x18]; mov rbx, qword ptr [rbp - 8]; leave; ret; 
0x000000000040424b: mov rdi, rax; call 0x4aca; mov rax, qword ptr [rbp - 8]; leave; ret; 
0x00000000004043a7: mov rdi, rax; call 0x4b66; nop; leave; ret; 
0x000000000040458a: mov rdi, rax; call 0x4cc0; nop; mov rbx, qword ptr [rbp - 8]; leave; ret; 
0x0000000000404668: mov rdi, rax; call 0x4d9e; leave; ret; 
0x0000000000404796: mov rdi, rax; call 0x4e6c; leave; ret; 
0x0000000000404c8c: mov rdi, rax; call 0x5190; leave; ret; 
0x0000000000404cb5: mov rdi, rax; call 0x51a2; nop; leave; ret; 
0x0000000000404d1e: mov rdi, rax; call 0x51d3; leave; ret; 
0x0000000000404d40: mov rdi, rax; call 0x51f2; nop; leave; ret; 
0x0000000000404d60: mov rdi, rax; call 0x5202; nop; leave; ret; 
0x0000000000404d92: mov rdi, rax; call 0x5212; nop; leave; ret; 
0x0000000000404e61: mov rdi, rax; call 0x52ec; leave; ret; 
0x0000000000404e80: mov rdi, rax; call 0x534c; leave; ret; 
0x0000000000404ecc: mov rdi, rax; call 0x5376; leave; ret; 
0x0000000000404f7f: mov rdi, rax; call 0x54b6; nop; leave; ret; 
0x000000000040511c: mov rdi, rax; call 0x5544; mov rax, qword ptr [rbp - 8]; leave; ret; 
0x00000000004051c9: mov rdi, rax; call 0x5634; leave; ret; 
0x00000000004051e7: mov rdi, rax; call 0x5652; leave; ret; 
0x0000000000405272: mov rdi, rax; call 0x5664; leave; ret; 
0x0000000000405290: mov rdi, rax; call 0x5676; leave; ret; 
0x00000000004052b2: mov rdi, rax; call 0x5694; mov rdi, rax; call 0x56a6; leave; ret; 
0x00000000004052ba: mov rdi, rax; call 0x56a6; leave; ret; 
0x0000000000405403: mov rdi, rax; call 0x56c4; nop; leave; ret; 
0x0000000000405539: mov rdi, rax; call 0x5714; nop; leave; ret; 
0x0000000000405648: mov rdi, rax; call 0x57ed; leave; ret; 
0x000000000040568a: mov rdi, rax; call 0x5800; leave; ret; 
0x00000000004056ba: mov rdi, rax; call 0x581e; leave; ret; 
0x0000000000405709: mov rdi, rax; call 0x5830; nop; leave; ret; 
0x0000000000405814: mov rdi, rax; call 0x58b4; leave; ret; 
0x0000000000405897: mov rdi, rax; call 0x590e; leave; ret; 
0x00000000004058da: mov rdi, rax; call 0x5973; leave; ret; 
0x0000000000405987: mov rdi, rax; call 0x5991; leave; ret; 
0x00000000004059a5: mov rdi, rax; call 0x59af; leave; ret; 
0x0000000000404cff: mov rdi, rcx; call 0x4f58; nop; leave; ret; 
0x0000000000403ed1: mov rdi, rdx; call 0x2e62; leave; ret; 
0x0000000000402f0e: mov rdx, qword ptr [rbp - 0x10]; mov qword ptr [rax + 8], rdx; nop; pop rbp; ret; 
0x00000000004043d8: mov rdx, qword ptr [rbp - 0x10]; mov qword ptr [rax], rdx; nop; pop rbp; ret; 
0x00000000004056d8: mov rdx, qword ptr [rbp - 0x10]; mov rdx, qword ptr [rdx]; mov qword ptr [rax], rdx; nop; pop rbp; ret; 
0x000000000040328a: mov rdx, qword ptr [rbp - 0x10]; mov rsi, rdx; mov rdi, rax; call 0x37e0; leave; ret; 
0x00000000004032f8: mov rdx, qword ptr [rbp - 0x10]; mov rsi, rdx; mov rdi, rax; call 0x387a; leave; ret; 
0x0000000000403348: mov rdx, qword ptr [rbp - 0x10]; mov rsi, rdx; mov rdi, rax; call 0x39ac; leave; ret; 
0x0000000000403372: mov rdx, qword ptr [rbp - 0x10]; mov rsi, rdx; mov rdi, rax; call 0x3a08; leave; ret; 
0x00000000004036ac: mov rdx, qword ptr [rbp - 0x10]; mov rsi, rdx; mov rdi, rax; call 0x3e8b; leave; ret; 
0x00000000004050fd: mov rdx, qword ptr [rbp - 0x18]; mov qword ptr [rax], rdx; nop; leave; ret; 
0x00000000004057e3: mov rdx, qword ptr [rbp - 8]; mov qword ptr [rdx], rax; nop; leave; ret; 
0x00000000004056dc: mov rdx, qword ptr [rdx]; mov qword ptr [rax], rdx; nop; pop rbp; ret; 
0x0000000000404402: mov rsi, rax; mov edi, 1; call 0x2dfa; nop; leave; ret; 
0x0000000000404cfc: mov rsi, rax; mov rdi, rcx; call 0x4f58; nop; leave; ret; 
0x0000000000404696: mov rsi, rcx; mov rdi, rax; call 0x2e90; leave; ret; 
0x00000000004033a8: mov rsi, rcx; mov rdi, rax; call 0x3ab8; mov rax, qword ptr [rbp - 8]; leave; ret; 
0x000000000040340c: mov rsi, rcx; mov rdi, rax; call 0x3b36; mov rax, qword ptr [rbp - 8]; leave; ret; 
0x0000000000403663: mov rsi, rcx; mov rdi, rax; call 0x3e1c; nop; leave; ret; 
0x0000000000403f00: mov rsi, rcx; mov rdi, rax; call 0x4672; leave; ret; 
0x0000000000404d8f: mov rsi, rcx; mov rdi, rax; call 0x5212; nop; leave; ret; 
0x0000000000404e5e: mov rsi, rcx; mov rdi, rax; call 0x52ec; leave; ret; 
0x0000000000404ec9: mov rsi, rcx; mov rdi, rax; call 0x5376; leave; ret; 
0x0000000000404f7c: mov rsi, rcx; mov rdi, rax; call 0x54b6; nop; leave; ret; 
0x0000000000405706: mov rsi, rcx; mov rdi, rax; call 0x5830; nop; leave; ret; 
0x0000000000405894: mov rsi, rcx; mov rdi, rax; call 0x590e; leave; ret; 
0x000000000040523a: mov rsi, rdx; mov rdi, rax; call 0x23b0; leave; ret; 
0x000000000040328e: mov rsi, rdx; mov rdi, rax; call 0x37e0; leave; ret; 
0x00000000004032fc: mov rsi, rdx; mov rdi, rax; call 0x387a; leave; ret; 
0x000000000040334c: mov rsi, rdx; mov rdi, rax; call 0x39ac; leave; ret; 
0x0000000000403376: mov rsi, rdx; mov rdi, rax; call 0x3a08; leave; ret; 
0x000000000040343a: mov rsi, rdx; mov rdi, rax; call 0x3b7c; nop; leave; ret; 
0x0000000000403c3c: mov rsi, rdx; mov rdi, rax; call 0x3bf6; mov rax, qword ptr [rbp - 8]; leave; ret; 
0x00000000004036b0: mov rsi, rdx; mov rdi, rax; call 0x3e8b; leave; ret; 
0x00000000004039da: mov rsi, rdx; mov rdi, rax; call 0x3edc; leave; ret; 
0x000000000040417e: mov rsi, rdx; mov rdi, rax; call 0x3f5e; mov rax, qword ptr [rbp - 0x10]; leave; ret; 
0x0000000000403841: mov rsi, rdx; mov rdi, rax; call 0x3f5e; mov rax, qword ptr [rbp - 0x18]; leave; ret; 
0x0000000000403f7a: mov rsi, rdx; mov rdi, rax; call 0x43c4; nop; leave; ret; 
0x0000000000403be7: mov rsi, rdx; mov rdi, rax; call 0x43e2; nop; leave; ret; 
0x0000000000404080: mov rsi, rdx; mov rdi, rax; call 0x4540; nop; leave; ret; 
0x0000000000403fc2: mov rsi, rdx; mov rdi, rax; call 0x47a0; nop; leave; ret; 
0x0000000000404cb2: mov rsi, rdx; mov rdi, rax; call 0x51a2; nop; leave; ret; 
0x0000000000405400: mov rsi, rdx; mov rdi, rax; call 0x56c4; nop; leave; ret; 
0x0000000000405536: mov rsi, rdx; mov rdi, rax; call 0x5714; nop; leave; ret; 
0x000000000040514c: mov word ptr [rax + rax], es; add byte ptr [rax - 0x77], cl; ret 0x8b48; 
0x0000000000404509: movabs dword ptr [0xc9f85d8b48ffffdf], eax; ret; 
0x0000000000405902: movabs rax, 0xfffffffffffffff; pop rbp; ret; 
0x0000000000402ed0: movss dword ptr [rax], xmm0; mov rax, qword ptr [rbp - 8]; mov qword ptr [rax + 8], 0; nop; pop rbp; ret; 
0x00000000004051cd: movsxd rax, dword ptr [rax + rax]; add cl, cl; ret; 
0x0000000000402ed1: movups xmmword ptr [rax], xmm0; mov rax, qword ptr [rbp - 8]; mov qword ptr [rax + 8], 0; nop; pop rbp; ret; 
0x00000000004045b9: movzx eax, al; test rax, rax; setne al; pop rbp; ret; 
0x00000000004030a8: movzx eax, byte ptr [rax]; cmp dl, al; sete al; pop rbp; ret; 
0x0000000000402518: nop dword ptr [rax + rax]; endbr64; ret; 
0x0000000000402517: nop dword ptr cs:[rax + rax]; endbr64; ret; 
0x0000000000402516: nop word ptr cs:[rax + rax]; endbr64; ret; 
0x0000000000404ac0: nop; add rsp, 0x20; pop rbx; pop r12; pop rbp; ret; 
0x0000000000404f4e: nop; add rsp, 0x30; pop rbx; pop r12; pop rbp; ret; 
0x0000000000402dde: nop; leave; ret; 
0x0000000000404779: nop; mov eax, 0; leave; ret; 
0x0000000000404592: nop; mov rbx, qword ptr [rbp - 8]; leave; ret; 
0x0000000000403e18: nop; nop; leave; ret; 
0x00000000004025e1: nop; pop rbp; ret; 
0x000000000040254f: nop; ret; 
0x0000000000402007: or byte ptr [rax - 0x75], cl; add eax, 0x7fe1; test rax, rax; je 0x2016; call rax; 
0x0000000000405625: or byte ptr [rax - 0x75], cl; clc; mov qword ptr [rax + 8], rdx; mov rax, qword ptr [rbp - 8]; pop rbp; ret; 
0x000000000040562d: or byte ptr [rax - 0x75], cl; clc; pop rbp; ret; 
0x000000000040558d: or byte ptr [rax - 0x77], cl; ret 0x8948; 
0x0000000000403b09: or byte ptr [rax], al; add byte ptr [rax - 0x75], cl; call 0xfffffffff85dc65c; leave; ret; 
0x0000000000404207: or byte ptr [rax], al; add byte ptr [rax - 0x75], cl; call 0xfffffffff85dcd5a; leave; ret; 
0x0000000000404250: or byte ptr [rax], al; add byte ptr [rax - 0x75], cl; clc; leave; ret; 
0x0000000000403bdd: or byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x8b48; 
0x0000000000403a5b: or byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x0000000000403a5a: or byte ptr es:[rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x0000000000403b08: or byte ptr fs:[rax], al; add byte ptr [rax - 0x75], cl; call 0xfffffffff85dc65c; leave; ret; 
0x0000000000402546: or dword ptr [rdi + 0x40a160], edi; jmp rax; 
0x0000000000403d9f: or eax, 0x48ffffe7; mov ebx, dword ptr [rbp - 8]; leave; ret; 
0x0000000000402e51: or eax, 0xe8458b48; mov rdi, rax; call 0x22e0; nop; leave; ret; 
0x0000000000403da0: out 0xff, eax; dec dword ptr [rax - 0x75]; pop rbp; clc; leave; ret; 
0x000000000040469e: out 0xff, eax; dec ecx; ret; 
0x0000000000404b59: out 0xff, eax; inc dword ptr [rax + rax*8 - 0x74b7278b]; clc; leave; ret; 
0x0000000000402f32: out 1, al; add byte ptr [rax], al; nop; leave; ret; 
0x000000000040469d: out dx, eax; out 0xff, eax; dec ecx; ret; 
0x0000000000404dec: outsb dx, byte ptr [rsi]; add al, 0; add byte ptr [rax - 0x77], cl; ret; 
0x000000000040568e: outsb dx, byte ptr [rsi]; add dword ptr [rax], eax; add cl, cl; ret; 
0x000000000040589b: outsd dx, dword ptr [rsi]; add byte ptr [rax], al; add cl, cl; ret; 
0x000000000040493f: pop r12; pop r13; pop r14; pop rbp; ret; 
0x000000000040404d: pop r12; pop r13; pop rbp; ret; 
0x0000000000404ac6: pop r12; pop rbp; ret; 
0x0000000000404941: pop r13; pop r14; pop rbp; ret; 
0x000000000040404f: pop r13; pop rbp; ret; 
0x0000000000404943: pop r14; pop rbp; ret; 
0x00000000004054ae: pop rax; pop rbx; pop r12; pop r13; pop rbp; ret; 
0x00000000004025de: pop rax; pop rsp; pop rdi; nop; pop rbp; ret; 
0x0000000000402846: pop rbp; clc; leave; ret; 
0x0000000000404942: pop rbp; pop r14; pop rbp; ret; 
0x0000000000404050: pop rbp; pop rbp; ret; 
0x00000000004025bd: pop rbp; ret; 
0x000000000040493e: pop rbx; pop r12; pop r13; pop r14; pop rbp; ret; 
0x000000000040404c: pop rbx; pop r12; pop r13; pop rbp; ret; 
0x0000000000404ac5: pop rbx; pop r12; pop rbp; ret; 
0x00000000004025e0: pop rdi; nop; pop rbp; ret; 
0x0000000000404b58: pop rsi; out 0xff, eax; inc dword ptr [rax + rax*8 - 0x74b7278b]; clc; leave; ret; 
0x0000000000404944: pop rsi; pop rbp; ret; 
0x00000000004056be: pop rsp; add dword ptr [rax], eax; add cl, cl; ret; 
0x0000000000404940: pop rsp; pop r13; pop r14; pop rbp; ret; 
0x000000000040404e: pop rsp; pop r13; pop rbp; ret; 
0x0000000000404ac7: pop rsp; pop rbp; ret; 
0x00000000004025df: pop rsp; pop rdi; nop; pop rbp; ret; 
0x000000000040564c: popfq; add dword ptr [rax], eax; add cl, cl; ret; 
0x000000000040562c: push rax; or byte ptr [rax - 0x75], cl; clc; pop rbp; ret; 
0x00000000004050ff: push rbp; call 0xffffffff9010da4d; leave; ret; 
0x00000000004057e5: push rbp; clc; mov qword ptr [rdx], rax; nop; leave; ret; 
0x00000000004025ad: push rbp; mov rbp, rsp; call 0x2530; mov byte ptr [rip + 0x7f53], 1; pop rbp; ret; 
0x00000000004043b6: push rbp; mov rbp, rsp; mov qword ptr [rbp - 8], rdi; mov rax, qword ptr [rbp - 8]; pop rbp; ret; 
0x00000000004058fa: push rbp; mov rbp, rsp; mov qword ptr [rbp - 8], rdi; movabs rax, 0xfffffffffffffff; pop rbp; ret; 
0x0000000000403120: push rbp; mov rbp, rsp; mov qword ptr [rbp - 8], rdi; nop; pop rbp; ret; 
0x0000000000403e81: push rbp; mov rbp, rsp; mov qword ptr [rbp - 8], rdi; pop rbp; ret; 
0x00000000004025b8: push rbx; jg 0x25bb; add byte ptr [rcx], al; pop rbp; ret; 
0x0000000000404abb: ret 0x4810; 
0x0000000000402d14: ret 0x80be; 
0x0000000000403204: ret 0x8948; 
0x0000000000402624: ret 0x8b48; 
0x000000000040260f: ret 0x8d48; 
0x00000000004030ac: ret 0x940f; 
0x00000000004032da: ret 0x950f; 
0x000000000040201a: ret; 
0x0000000000402cf2: retf 0xfff6; dec dword ptr [rax - 0x77]; ret 0x8d48; 
0x000000000040596d: retf 0xffff; nop; leave; ret; 
0x00000000004036b7: rol byte ptr [rdi], 1; add byte ptr [rax], al; leave; ret; 
0x00000000004039cf: rol dword ptr [rax + rax], cl; add byte ptr [rax - 0x77], cl; ret 0x8b48; 
0x000000000040553d: rol dword ptr [rcx], cl; add byte ptr [rax], al; nop; leave; ret; 
0x0000000000403fc9: rol dword ptr [rdi], cl; add byte ptr [rax], al; nop; leave; ret; 
0x00000000004045bb: ror byte ptr [rax - 0x7b], 0xc0; setne al; pop rbp; ret; 
0x0000000000404206: ror byte ptr [rax], 0; add byte ptr [rax - 0x75], cl; call 0xfffffffff85dcd5a; leave; ret; 
0x00000000004055f5: ror byte ptr [rax], 0x48; mov edi, eax; call 0x3f88; leave; ret; 
0x00000000004041a9: ror byte ptr [rax], 0x48; mov edi, eax; call 0x4782; leave; ret; 
0x00000000004045b8: ror byte ptr [rdi], 0xb6; ror byte ptr [rax - 0x7b], 0xc0; setne al; pop rbp; ret; 
0x0000000000404b5d: sal byte ptr [rbp - 0x28], 0x48; mov eax, dword ptr [rbp - 8]; leave; ret; 
0x00000000004030f3: sal byte ptr [rbp - 0x2a], 0x48; mov eax, dword ptr [rbp - 8]; leave; ret; 
0x0000000000405187: sal byte ptr [rbp - 0x46], 0x48; mov eax, dword ptr [rbp - 0x18]; leave; ret; 
0x0000000000402011: sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x0000000000402511: sar dword ptr [rdx], cl; add ah, dh; nop word ptr cs:[rax + rax]; endbr64; ret; 
0x0000000000405242: sar edi, 1; dec ecx; ret; 
0x00000000004045b6: sete al; movzx eax, al; test rax, rax; setne al; pop rbp; ret; 
0x00000000004030ad: sete al; pop rbp; ret; 
0x00000000004032db: setne al; pop rbp; ret; 
0x00000000004053d6: shl eax, 3; mov rdi, rax; call 0x23a0; nop; leave; ret; 
0x00000000004053d5: shl rax, 3; mov rdi, rax; call 0x23a0; nop; leave; ret; 
0x0000000000404447: stosd dword ptr [rdi], eax; idiv edi; dec dword ptr [rax - 0x75]; clc; leave; ret; 
0x0000000000403ea0: sub eax, dword ptr [rbp - 8]; pop rbp; ret; 
0x00000000004059e9: sub esp, 8; add rsp, 8; ret; 
0x0000000000402005: sub esp, 8; mov rax, qword ptr [rip + 0x7fe1]; test rax, rax; je 0x2016; call rax; 
0x0000000000403e9f: sub rax, qword ptr [rbp - 8]; pop rbp; ret; 
0x00000000004059e8: sub rsp, 8; add rsp, 8; ret; 
0x0000000000402004: sub rsp, 8; mov rax, qword ptr [rip + 0x7fe1]; test rax, rax; je 0x2016; call rax; 
0x00000000004030f2: test al, al; jne 0x30cc; mov rax, qword ptr [rbp - 8]; leave; ret; 
0x0000000000404b5c: test al, al; jne 0x4b38; mov rax, qword ptr [rbp - 8]; leave; ret; 
0x0000000000405186: test al, al; jne 0x5144; mov rax, qword ptr [rbp - 0x18]; leave; ret; 
0x000000000040251a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; endbr64; ret; 
0x0000000000402010: test eax, eax; je 0x2016; call rax; 
0x0000000000402010: test eax, eax; je 0x2016; call rax; add rsp, 8; ret; 
0x0000000000402543: test eax, eax; je 0x2550; mov edi, 0x40a160; jmp rax; 
0x0000000000402585: test eax, eax; je 0x2590; mov edi, 0x40a160; jmp rax; 
0x00000000004045bd: test eax, eax; setne al; pop rbp; ret; 
0x000000000040200f: test rax, rax; je 0x2016; call rax; 
0x000000000040200f: test rax, rax; je 0x2016; call rax; add rsp, 8; ret; 
0x0000000000402542: test rax, rax; je 0x2550; mov edi, 0x40a160; jmp rax; 
0x0000000000402584: test rax, rax; je 0x2590; mov edi, 0x40a160; jmp rax; 
0x00000000004045bc: test rax, rax; setne al; pop rbp; ret; 
0x000000000040337d: xchg dword ptr [rsi], eax; add byte ptr [rax], al; leave; ret; 
0x00000000004058de: xchg eax, ecx; add byte ptr [rax], al; add cl, cl; ret; 
0x00000000004045b7: xchg eax, esp; ror byte ptr [rdi], 0xb6; ror byte ptr [rax - 0x7b], 0xc0; setne al; pop rbp; ret; 
0x0000000000403ed3: xlatb; call 0x2e62; leave; ret; 
0x000000000040359a: xor al, 0; add byte ptr [rax], al; nop; leave; ret; 
0x00000000004033e0: xor al, byte ptr [rdi]; add byte ptr [rax], al; nop; leave; ret; 
0x000000000040493d: xor byte ptr [rbx + 0x41], bl; pop rsp; pop r13; pop r14; pop rbp; ret; 
0x0000000000404f52: xor byte ptr [rbx + 0x41], bl; pop rsp; pop rbp; ret; 
0x0000000000403086: xor byte ptr [rbx], al; add byte ptr [rax], al; nop; leave; ret; 
0x0000000000403577: xor eax, 0x48ffffef; mov ebx, dword ptr [rbp - 8]; leave; ret; 
0x00000000004030ef: xor eax, 1; test al, al; jne 0x30cc; mov rax, qword ptr [rbp - 8]; leave; ret; 

1194 gadgets found
