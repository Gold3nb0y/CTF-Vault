#!/usr/bin/env python3

from pwn import *
import os

exe = ELF("binary_mail_patched")

context.binary = exe

TAG_RES_MSG      = 0  
TAG_RES_ERROR    = 1
TAG_INPUT_REQ    = 2
TAG_INPUT_ANS    = 3
TAG_COMMAND      = 4
TAG_STR_PASSWORD = 5
TAG_STR_FROM     = 6
TAG_STR_MESSAGE  = 7

def conn():
    if args.LOCAL:
        r = process([exe.path])
        if args.DEBUG:
            gdb.attach(r)
    else:
        r = remote("addr", 1337)

    return r

r = conn()

sla = lambda a,b : r.sendlineafter(a,b)
sl = lambda a : r.sendline(a)
se = lambda a : r.sendline(a)
ru = lambda a : r.recvuntil(a)

password = b'lollollol'

def build_tag(tag, length):
    ret = p32(tag)
    ret += p64(length)
    return ret

def parse_tag(raw):
    tag = u32(raw[0:4])
    length = u64(raw[4:12])
    return tag,length

def respond_input(msg):
    tag = build_tag(TAG_INPUT_ANS, len(msg)+1)
    sl(tag + msg)

def send_cmd(cmd):
    tag = build_tag(TAG_COMMAND, len(cmd)+1)
    sl(tag + cmd)

def register(first=False, username=b'chefchef', password=b'lollollol'):
    send_cmd(b'register')
    ru(b'username')
    respond_input(username)
    if first:
        ru(b'password')
        respond_input(password)

def viewmail(username=b'chefchef', password=b'lollollol'):
    send_cmd(b'view_mail')
    ru(b'username')
    respond_input(username)
    ru(b'password')
    respond_input(password)
    #the rest just prints the mail?
    #raw = r.recvuntil(b'from: ', drop=True)
    #tag, length = parse_tag(raw[-12:])
    #log.info(f"from: {r.recv(length)}")
    #raw = r.recvuntil(b'message: ', drop=True)
    #tag, length = parse_tag(raw[-12:])
    #log.info(f"message: {r.recv(length)}")
    

def sendmail(recvier,msg,username=b'chefchef', password=b'lollollol'):
    send_cmd(b'send_mail')
    ru(b'username')
    respond_input(username)
    ru(b'password')
    respond_input(password)
    ru(b'recipient')
    respond_input(recvier)
    ru(b'message')
    respond_input(msg)

def main():
    #gdb.attach(r, gdbscript="b *main+58")
    os.system("rm /tmp/chefchef*")
    os.system("rm /tmp/help*")
    register(first=True)
    register(first=True, username=b'help', password=b'help')

    sendmail(b'help', b'please get to work')
    viewmail(username=b'help', password=b'help')

    os.system('xxd /tmp/chefchef*')
    os.system('xxd /tmp/help*')
    r.interactive()


if __name__ == "__main__":
    main()
